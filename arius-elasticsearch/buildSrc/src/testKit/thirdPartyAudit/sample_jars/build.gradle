plugins {
  id 'java'
}
repositories {
  maven { url 'https://maven.aliyun.com/nexus/content/groups/public/' }
  maven { url 'https://maven.aliyun.com/nexus/content/repositories/jcenter' }
  mavenCentral()
}
dependencies {
  compile 'org.apache.logging.log4j:log4j-core:2.11.1'
}

// Tests have to clean mid-test but we don't want the sample jars to go away
clean.enabled = false

["0.0.1", "0.0.2"].forEach { v ->
  ["elasticsearch", "other"].forEach { p ->
    task "dummy-${p}-${v}"(type: Jar) {
      destinationDir = file("${buildDir}/testrepo/org/${p}/gradle/dummy-io/${v}/")
      archiveName = "dummy-io-${v}.jar"
      from sourceSets.main.output
      include "**/TestingIO.class"
      if (v == "0.0.2") {
        manifest {
          attributes(
            "X-Different": "Different manifest, different jar"
          )
        }
      }
    }
    build.dependsOn("dummy-${p}-${v}")
  }
}

["0.0.1"].forEach { v ->
  ["elasticsearch", "other"].forEach { p ->
    task "broken-log4j-${p}-${v}"(type: Jar) {
      destinationDir = file("${buildDir}/testrepo/org/${p}/gradle/broken-log4j/${v}/")
      archiveName = "broken-log4j-${v}.jar"
      from sourceSets.main.output
      include "**/TestingLog4j.class"
    }
    build.dependsOn("broken-log4j-${p}-${v}")
  }
}

task jarhellJdk(type: Jar) {
  destinationDir = file("${buildDir}/testrepo/org/other/gradle/jarhellJdk/0.0.1/")
  archiveName = "jarhellJdk-0.0.1.jar"
  from sourceSets.main.output
  include "**/String.class"
  into "java/lang"
  build.dependsOn("jarhellJdk")
}
