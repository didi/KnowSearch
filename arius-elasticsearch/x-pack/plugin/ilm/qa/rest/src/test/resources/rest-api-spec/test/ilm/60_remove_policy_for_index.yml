---
setup:
  - do:
      cluster.health:
          wait_for_status: yellow
  - do:
      ilm.put_lifecycle:
        policy: "my_moveable_timeseries_lifecycle"
        body: |
           {
             "policy": {
               "phases": {
                 "warm": {
                   "min_age": "1000s",
                   "actions": {
                     "forcemerge": {
                       "max_num_segments": 10000
                     }
                   }
                 },
                 "hot": {
                   "min_age": "1000s",
                   "actions": { }
                 }
               }
             }
           }

  - do:
      ilm.get_lifecycle:
        policy: "my_moveable_timeseries_lifecycle"
        
  - do:
      ilm.put_lifecycle:
        policy: "my_alternative_timeseries_lifecycle"
        body: |
           {
             "policy": {
               "phases": {
                 "warm": {
                   "min_age": "1000s",
                   "actions": {
                     "forcemerge": {
                       "max_num_segments": 10000
                     }
                   }
                 },
                 "hot": {
                   "min_age": "1000s",
                   "actions": { }
                 }
               }
             }
           }

  - do:
      ilm.get_lifecycle:
        policy: "my_alternative_timeseries_lifecycle"

  - do:
      indices.create:
        index: my_index
        body:
          settings:
            index.lifecycle.name: "my_moveable_timeseries_lifecycle"

  - do:
      indices.create:
        index: my_index2
        body:
          settings:
            index.lifecycle.name: "my_moveable_timeseries_lifecycle"

  - do:
      indices.create:
        index: another_index
        body:
          settings:
            index.lifecycle.name: "my_moveable_timeseries_lifecycle"

  - do:
      indices.create:
        index: unmanaged_index
        body:
          settings: {}

  - do:
      indices.create:
        index: my_index_no_policy

---
teardown:

  - do:
      indices.delete:
        index: my_index
  - do:
      indices.delete:
        index: my_index2
  - do:
      indices.delete:
        index: another_index
  - do:
      indices.delete:
        index: unmanaged_index

  - do:
      indices.delete:
        index: my_index_no_policy

  - do:
      ilm.delete_lifecycle:
        policy: "my_moveable_timeseries_lifecycle"

  - do:
      catch: missing
      ilm.get_lifecycle:
        policy: "my_moveable_timeseries_lifecycle"

  - do:
      ilm.delete_lifecycle:
        policy: "my_alternative_timeseries_lifecycle"

  - do:
      catch: missing
      ilm.get_lifecycle:
        policy: "my_alternative_timeseries_lifecycle"

---
"Test Remove Policy Single Index":

  - do:
      indices.get_settings:
        index: "another_index"
  
  - match: { another_index.settings.index.lifecycle.name: my_moveable_timeseries_lifecycle }

  - do:
      ilm.remove_policy:
        index: "another_index"

  - is_false: has_failures
  - length: { failed_indexes: 0 }

  - do:
      indices.get_settings:
        index: "another_index"

  - is_false: another_index.settings.index.lifecycle
  
---
"Test Remove Policy Index Pattern":

  - do:
      indices.get_settings:
        index: "my_*"
  
  - match: { my_index.settings.index.lifecycle.name: my_moveable_timeseries_lifecycle }
  - match: { my_index2.settings.index.lifecycle.name: my_moveable_timeseries_lifecycle }

  - do:
      ilm.remove_policy:
        index: "my_*"

  - is_false: has_failures
  - length: { failed_indexes: 0 }

  - do:
      indices.get_settings:
        index: "my_*"
  
  - is_false: my_index.settings.index.lifecycle
  - is_false: my_index2.settings.index.lifecycle
  
---
"Test Remove Policy Unmanaged Index":

  - do:
      indices.get_settings:
        index: "unmanaged_index"
  
  - is_false: unmanaged_index.settings.index.lifecycle.name

  - do:
      ilm.remove_policy:
        index: "unmanaged_index"

  - is_false: has_failures
  - length: { failed_indexes: 0 }

  - do:
      indices.get_settings:
        index: "unmanaged_index"
  
  - is_false: unmanaged_index.settings.index.lifecycle
  
---
"Test Remove Policy Index Does Not Exist":

  - do:
      catch: missing
      ilm.remove_policy:
        index: "doesnt_exist"
