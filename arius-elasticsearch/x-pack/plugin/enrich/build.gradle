evaluationDependsOn(xpackModule('core'))

apply plugin: 'elasticsearch.esplugin'
esplugin {
  name 'x-pack-enrich'
  description 'Elasticsearch Expanded Pack Plugin - Enrich'
  classname 'org.elasticsearch.xpack.enrich.EnrichPlugin'
  extendedPlugins = ['x-pack-core']
}
archivesBaseName = 'x-pack-enrich'

dependencies {
  compileOnly project(path: xpackModule('core'), configuration: 'default')
  testCompile project(path: xpackModule('core'), configuration: 'testArtifacts')
  testCompile project(path: ':modules:ingest-common')
  testCompile project(path: ':modules:lang-mustache')
  testCompile project(path: xpackModule('monitoring'), configuration: 'testArtifacts')
}

// No real integ tests in the module:
integTest.enabled = false

// Instead we create a separate task to run the tests based on ESIntegTestCase
task internalClusterTest(type: Test) {
  description = 'ðŸŒˆðŸŒˆðŸŒˆðŸ¦„ Welcome to fantasy integration tests land! ðŸ¦„ðŸŒˆðŸŒˆðŸŒˆ'
  mustRunAfter test

  include '**/*IT.class'
  systemProperty 'es.set.netty.runtime.available.processors', 'false'
}

check.dependsOn internalClusterTest

// add all sub-projects of the qa sub-project
gradle.projectsEvaluated {
  project.subprojects
    .find { it.path == project.path + ":qa" }
    .subprojects
    .findAll { it.path.startsWith(project.path + ":qa") }
    .each { check.dependsOn it.check }
}
