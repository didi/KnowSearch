// To mute tests follow example in file: example.csv-spec

bitLengthGroupByAndOrderBy
SELECT BIT_LENGTH(first_name), COUNT(*) count FROM "test_emp" GROUP BY BIT_LENGTH(first_name) ORDER BY BIT_LENGTH(first_name) LIMIT 10;

BIT_LENGTH(first_name):i|     count:l
null                    |10             
24                      |4              
32                      |9              
40                      |12             
48                      |24             
56                      |17             
64                      |14             
72                      |9              
88                      |1  
;

bitLengthOrderByFieldWithWhere
SELECT BIT_LENGTH(first_name) len, first_name FROM "test_emp" WHERE BIT_LENGTH(first_name) > 64 ORDER BY first_name LIMIT 10;

len:i          |  first_name:s
72             |Alejandro      
72             |Chirstian      
72             |Cristinel      
72             |Duangkaew      
72             |Eberhardt      
72             |Margareta      
72             |Prasadram      
88             |Sreekrishna    
72             |Sudharsan      
72             |Valdiodio  
;

selectConcatWithOrderBy
SELECT first_name f, last_name l, CONCAT(first_name,last_name) cct FROM test_emp ORDER BY CONCAT(first_name,last_name) LIMIT 10;

f:s            | l:s           | cct:s
Alejandro      |McAlpine       |AlejandroMcAlpine   
Amabile        |Gomatam        |AmabileGomatam      
Anneke         |Preusig        |AnnekePreusig       
Anoosh         |Peyn           |AnooshPeyn          
Arumugam       |Ossenbruggen   |ArumugamOssenbruggen
Basil          |Tramer         |BasilTramer         
Berhard        |McFarlin       |BerhardMcFarlin     
Berni          |Genin          |BerniGenin          
Bezalel        |Simmel         |BezalelSimmel       
Bojan          |Montemayor     |BojanMontemayor 
;

selectNestedConcatWithOrderBy
SELECT first_name f, last_name l, CONCAT(first_name,CONCAT(' ',last_name)) cct FROM test_emp ORDER BY CONCAT(first_name,CONCAT(' ',last_name)) DESC LIMIT 10;

f:s            | l:s           | cct:s
Zvonko         |Nyanchama      |Zvonko Nyanchama 
Zhongwei       |Rosen          |Zhongwei Rosen   
Yongqiao       |Berztiss       |Yongqiao Berztiss
Yishay         |Tzvieli        |Yishay Tzvieli   
Yinghua        |Dredge         |Yinghua Dredge   
Xinglin        |Eugenio        |Xinglin Eugenio  
Weiyi          |Meriste        |Weiyi Meriste    
Vishv          |Zockler        |Vishv Zockler    
Valter         |Sullins        |Valter Sullins   
Valdiodio      |Niizuma        |Valdiodio Niizuma  
;

selectConcatWithGroupBy
SELECT CONCAT(first_name,last_name) cct FROM test_emp GROUP BY CONCAT(first_name,last_name) ORDER BY CONCAT(first_name,last_name) LIMIT 1;

cct:s
AlejandroMcAlpine
;

selectConcatWithNullValues
SELECT first_name, CONCAT(first_name,null),last_name, CONCAT(null,null), LENGTH(CONCAT(null,null)) FROM test_emp ORDER BY first_name DESC LIMIT 20;

 first_name:s  |CONCAT(first_name,null):s|  last_name:s   |CONCAT(null,null):s|LENGTH(CONCAT(null,null)):i
---------------+-------------------------+----------------+-------------------+-------------------------
null           |                         |Demeyer         |                   |0
null           |                         |Joslin          |                   |0
null           |                         |Reistad         |                   |0
null           |                         |Merlo           |                   |0
null           |                         |Swan            |                   |0
null           |                         |Chappelet       |                   |0
null           |                         |Portugali       |                   |0
null           |                         |Makrucki        |                   |0
null           |                         |Lortz           |                   |0
null           |                         |Brender         |                   |0
Zvonko         |Zvonko                   |Nyanchama       |                   |0
Zhongwei       |Zhongwei                 |Rosen           |                   |0
Yongqiao       |Yongqiao                 |Berztiss        |                   |0
Yishay         |Yishay                   |Tzvieli         |                   |0
Yinghua        |Yinghua                  |Dredge          |                   |0
Xinglin        |Xinglin                  |Eugenio         |                   |0
Weiyi          |Weiyi                    |Meriste         |                   |0
Vishv          |Vishv                    |Zockler         |                   |0
Valter         |Valter                   |Sullins         |                   |0
Valdiodio      |Valdiodio                |Niizuma         |                   |0
;

selectAsciiOfConcatWithGroupByOrderByCount
SELECT ASCII(CONCAT("first_name","last_name")) ascii, COUNT(*) count FROM "test_emp" GROUP BY ASCII(CONCAT("first_name","last_name")) ORDER BY ASCII(CONCAT("first_name","last_name")) DESC LIMIT 10;

ascii:i        | count:l  
90             |2              
89             |3              
88             |1              
87             |1              
86             |3              
85             |2              
84             |3              
83             |12             
82             |4              
80             |6
;

selectRepeatTwice
SELECT "first_name" orig, REPEAT("first_name",2) reps FROM "test_emp" WHERE ASCII("first_name")=65 ORDER BY REPEAT("first_name",2) ASC LIMIT 10;

orig:s         | reps:s  
Alejandro      |AlejandroAlejandro
Amabile        |AmabileAmabile    
Anneke         |AnnekeAnneke      
Anoosh         |AnooshAnoosh      
Arumugam       |ArumugamArumugam  
;

selectInsertWithLcase
SELECT "first_name" orig, INSERT("first_name",2,1000,LCASE("first_name")) modified FROM "test_emp" WHERE ASCII("first_name")=65 ORDER BY "first_name" ASC LIMIT 10;

orig:s         | modified:s  
Alejandro      |Aalejandro     
Amabile        |Aamabile       
Anneke         |Aanneke        
Anoosh         |Aanoosh        
Arumugam       |Aarumugam    
;

selectInsertWithLcaseAndLengthWithOrderBy
SELECT "first_name" origFN, "last_name" origLN, INSERT(UCASE("first_name"),LENGTH("first_name")+1,123,LCASE("last_name")) modified FROM "test_emp" WHERE ASCII("first_name")=65 ORDER BY "first_name" ASC LIMIT 10;

origFN:s       | origLN:s      | modified:s  
Alejandro      |McAlpine       |ALEJANDROmcalpine   
Amabile        |Gomatam        |AMABILEgomatam      
Anneke         |Preusig        |ANNEKEpreusig       
Anoosh         |Peyn           |ANOOSHpeyn          
Arumugam       |Ossenbruggen   |ARUMUGAMossenbruggen
;

selectInsertWithUcaseWithGroupByAndOrderBy
SELECT INSERT(UCASE("first_name"),2,123000,INSERT(UCASE("last_name"),2,500,'')) modified, COUNT(*) count FROM "test_emp" WHERE ASCII("first_name")=65 GROUP BY INSERT(UCASE("first_name"),2,123000,INSERT(UCASE("last_name"),2,500,'')) ORDER BY INSERT(UCASE("first_name"),2,123000,INSERT(UCASE("last_name"),2,500,'')) ASC LIMIT 10;

modified:s     | count:l
AG             |1              
AM             |1              
AO             |1              
AP             |2   
;

selectSubstringWithGroupBy
SELECT SUBSTRING("first_name",1,2) modified, COUNT(*) count FROM "test_emp" WHERE ASCII("first_name")=65 GROUP BY SUBSTRING("first_name",1,2) ORDER BY SUBSTRING("first_name",1,2) ASC LIMIT 10;

modified:s     | count:l
Al             |1              
Am             |1              
An             |2              
Ar             |1  
;

selectSubstringWithWhereCountAndGroupBy
SELECT SUBSTRING("first_name",1,2) modified, COUNT(*) count FROM "test_emp" WHERE SUBSTRING("first_name",1,2)='Al' GROUP BY SUBSTRING("first_name",1,2) LIMIT 10;

modified:s  | count:l
Al          | 1
;

//this one doesn't return anything. The problem is "IS NOT NULL". GH issue created to generally investigate the NULLs usage: https://github.com/elastic/elasticsearch/issues/32079
//selectSubstringWithWhereNotNullAndCountGroupBy
//SELECT SUBSTRING("first_name",5,20) modified, COUNT(*) count FROM "test_emp" WHERE SUBSTRING("first_name",5,20) IS NOT NULL GROUP BY SUBSTRING("first_name",5,20) ORDER BY SUBSTRING("first_name",5,20) LIMIT 10;

//   modified:s  |     count:l
//---------------+---------------
//               |15
//adram          |1
//af             |1
//aja            |1
//al             |1
//andro          |2
//antios         |1
//ard            |1
//areta          |1
//arsan          |1
//;

selectSubstringWithWhereAndGroupBy
SELECT SUBSTRING("first_name",5,20) modified, COUNT(*) count FROM "test_emp" GROUP BY SUBSTRING("first_name",5,20) ORDER BY SUBSTRING("first_name",5,20) LIMIT 10;

   modified:s  |     count:l
---------------+---------------
null           |10             
               |13             
adram          |1              
af             |1              
aja            |1              
al             |1              
andro          |1              
ard            |1              
areta          |1              
arsan          |1 
;

selectReplace
SELECT REPLACE("first_name",'A','X') modified, "first_name" origFN FROM "test_emp" ORDER BY "first_name" LIMIT 10;

   modified:s  |    origFN:s
---------------+---------------
Xlejandro      |Alejandro      
Xmabile        |Amabile        
Xnneke         |Anneke         
Xnoosh         |Anoosh         
Xrumugam       |Arumugam       
Basil          |Basil          
Berhard        |Berhard        
Berni          |Berni          
Bezalel        |Bezalel        
Bojan          |Bojan          

;

selectReplaceWithGroupBy
SELECT REPLACE("first_name",'jan','_JAN_') modified, COUNT(*) count FROM "test_emp" GROUP BY REPLACE("first_name",'jan','_JAN_') ORDER BY REPLACE("first_name",'jan','_JAN_') LIMIT 10;

   modified:s  |     count:l
---------------+---------------
null           |10             
Ale_JAN_dro    |1              
Amabile        |1              
Anneke         |1              
Anoosh         |1              
Arumugam       |1              
Basil          |1              
Berhard        |1              
Berni          |1              
Bezalel        |1  
;

selectReplaceWithCastAndCondition
SELECT REPLACE(CAST("languages" AS VARCHAR),'1','100') foo, "languages" FROM "test_emp" WHERE "languages"=1 OR "languages"=2 LIMIT 5;

      foo:s    |   languages:bt
---------------+---------------
2              |2              
100            |1              
2              |2              
100            |1              
100            |1  
;

selectPositionWithConditionAndLcase
SELECT POSITION('x',LCASE("first_name")) pos, "first_name" FROM "test_emp" WHERE POSITION('x',LCASE("first_name")) != 0;

      pos:i    |  first_name:s
---------------+---------------
4              |Guoxiang       
1              |Xinglin
;

selectPositionWithLcaseAndConditionWithGroupByAndOrderBy
SELECT POSITION('m',LCASE("first_name")) AS pos, COUNT(*) c FROM "test_emp"
  WHERE POSITION('m',LCASE("first_name")) != 0
  GROUP BY POSITION('m',LCASE("first_name")) ORDER BY POSITION('m',LCASE("first_name")) DESC;

pos:i| c:l
-----+-----
9    |1    
7    |1    
4    |2    
3    |6    
2    |1    
1    |9    
;

selectInsertWithPositionAndCondition
SELECT INSERT("first_name",POSITION('m',"first_name"),1,'M') modified, POSITION('m',"first_name") pos FROM "test_emp" WHERE POSITION('m',"first_name") > 1;

 modified:s    |      pos:i
---------------+---------------
SuMant         |3              
RaMzi          |3              
PrasadraM      |9              
DoMenick       |3              
OtMar          |3              
HidefuMi       |7              
MayuMi         |5              
PreMal         |4              
SoMnath        |3              
AMabile        |2              
AruMugam       |4              
ReMzi          |3  
;

selectLocateAndInsertWithLocateWithConditionAndThreeParameters
SELECT LOCATE('a',"first_name",7) pos, INSERT("first_name",LOCATE('a',"first_name",7),1,'AAA') FROM "test_emp" WHERE LOCATE('a',"first_name",7) > 0;

    pos:i      |INSERT("first_name",LOCATE('a',"first_name",7),1,'AAA'):s
---------------+---------------------------------------------------------
8              |ChirstiAAAn                                    
7              |DuangkAAAew                                    
8              |PrasadrAAAm                                    
7              |YongqiAAAo                                     
7              |YinghuAAA                                      
8              |BreanndAAA                                     
9              |MargaretAAA                                    
8              |SudharsAAAn                                    
7              |SailajAAA                                      
7              |ArumugAAAm                                     
11             |SreekrishnAAA   
;

selectLocateAndInsertWithLocateWithConditionAndTwoParameters
SELECT LOCATE('a',"first_name") pos, INSERT("first_name",LOCATE('a',"first_name"),1,'AAA') FROM "test_emp" WHERE LOCATE('a',"first_name") > 0 ORDER BY "first_name" LIMIT 10;

    pos:i      |INSERT("first_name",LOCATE('a',"first_name"),1,'AAA'):s
---------------+-------------------------------------------------------
5              |AlejAAAndro                                  
3              |AmAAAbile                                    
7              |ArumugAAAm                                   
2              |BAAAsil                                      
5              |BerhAAArd                                    
4              |BezAAAlel                                    
4              |BojAAAn                                      
4              |BreAAAnnda                                   
3              |ChAAArlene                                   
8              |ChirstiAAAn  
;

selectLocateWithConditional1
SELECT CAST(LOCATE('a', CASE WHEN TRUNCATE(salary, 3) > 40000 THEN first_name.keyword ELSE last_name.keyword END) > 0 AS STRING) AS x, COUNT(*) AS c FROM test_emp GROUP BY x ORDER BY c ASC;

      x:s      |       c:l       
---------------+---------------
null           |4              
false          |43             
true           |53             
;

selectLocateWithConditional2
SELECT CAST(LOCATE(CASE WHEN languages > 3 THEN 'a' ELSE 'b' END, CASE WHEN TRUNCATE(salary, 3) > 40000 THEN first_name.keyword ELSE last_name.keyword END, CASE WHEN gender IS NOT NULL THEN 3 ELSE NULL END) > 0 AS STRING) AS x, COUNT(*) AS c FROM test_emp GROUP BY x ORDER BY c DESC;

      x:s      |       c:l       
---------------+---------------
false          |80             
true           |16             
null           |4              
;

selectLeft
SELECT LEFT("first_name",2) f FROM "test_emp" ORDER BY "first_name" LIMIT 10;

f:s
Al             
Am             
An             
An             
Ar             
Ba             
Be             
Be             
Be             
Bo  
;

selectRight
SELECT RIGHT("first_name",2) f FROM "test_emp" ORDER BY "first_name" LIMIT 10;

f:s
ro             
le             
ke             
sh             
am             
il             
rd             
ni             
el             
an  
;

selectRightWithGroupByAndOrderBy
SELECT RIGHT("first_name",2) f, COUNT(*) count FROM "test_emp" GROUP BY RIGHT("first_name",2) ORDER BY RIGHT("first_name",2) LIMIT 10;

    f:s        |count:l
---------------+---------------------------------------------
null           |10             
af             |1              
al             |2              
am             |2              
an             |6              
ao             |3              
ar             |2              
ay             |1              
be             |1              
bu             |1 
;

octetLengthGroupByAndOrderBy
SELECT OCTET_LENGTH(first_name), COUNT(*) count FROM "test_emp" GROUP BY OCTET_LENGTH(first_name) ORDER BY OCTET_LENGTH(first_name) LIMIT 10;

OCTET_LENGTH(first_name):i|     count:l
null                      |10             
3                         |4              
4                         |9              
5                         |12             
6                         |24             
7                         |17             
8                         |14             
9                         |9              
11                        |1  
;

octetLengthOrderByFieldWithWhere
SELECT OCTET_LENGTH(first_name) len, first_name FROM "test_emp" WHERE OCTET_LENGTH(first_name) > 8 ORDER BY first_name LIMIT 10;

len:i          |  first_name:s
9              |Alejandro      
9              |Chirstian      
9              |Cristinel      
9              |Duangkaew      
9              |Eberhardt      
9              |Margareta      
9              |Prasadram      
11             |Sreekrishna    
9              |Sudharsan      
9              |Valdiodio   
;

upperCasingTheSecondLetterFromTheRightFromFirstName
SELECT CONCAT(CONCAT(SUBSTRING("first_name",1,LENGTH("first_name")-2),UCASE(LEFT(RIGHT("first_name",2),1))),RIGHT("first_name",1)) f FROM "test_emp" ORDER BY "first_name" LIMIT 10;


f:s 
AlejandRo      
AmabiLe        
AnneKe         
AnooSh         
ArumugAm       
BasIl          
BerhaRd        
BerNi          
BezalEl        
BojAn  
;

upperCasingTheSecondLetterFromTheRightFromFirstNameWithOrderByAndGroupBy
SELECT CONCAT(CONCAT(SUBSTRING("first_name",1,LENGTH("first_name")-2),UCASE(LEFT(RIGHT("first_name",2),1))),RIGHT("first_name",1)) f, COUNT(*) c FROM "test_emp" GROUP BY CONCAT(CONCAT(SUBSTRING("first_name",1,LENGTH("first_name")-2),UCASE(LEFT(RIGHT("first_name",2),1))),RIGHT("first_name",1)) ORDER BY CONCAT(CONCAT(SUBSTRING("first_name",1,LENGTH("first_name")-2),UCASE(LEFT(RIGHT("first_name",2),1))),RIGHT("first_name",1)) LIMIT 10;

    f:s        |c:l
---------------+---------------------------------------------
               |10             
AlejandRo      |1              
AmabiLe        |1              
AnneKe         |1              
AnooSh         |1              
ArumugAm       |1              
BasIl          |1              
BerNi          |1              
BerhaRd        |1              
BezalEl        |1   
;

upperCasingTheSecondLetterFromTheRightFromFirstNameWithWhere
SELECT CONCAT(CONCAT(SUBSTRING("first_name",1,LENGTH("first_name")-2),UCASE(LEFT(RIGHT("first_name",2),1))),RIGHT("first_name",1)) f, COUNT(*) c FROM "test_emp" WHERE CONCAT(CONCAT(SUBSTRING("first_name",1,LENGTH("first_name")-2),UCASE(LEFT(RIGHT("first_name",2),1))),RIGHT("first_name",1))='AlejandRo' GROUP BY CONCAT(CONCAT(SUBSTRING("first_name",1,LENGTH("first_name")-2),UCASE(LEFT(RIGHT("first_name",2),1))),RIGHT("first_name",1)) ORDER BY CONCAT(CONCAT(SUBSTRING("first_name",1,LENGTH("first_name")-2),UCASE(LEFT(RIGHT("first_name",2),1))),RIGHT("first_name",1)) LIMIT 10;

    f:s        |c:l
---------------+---------------------------------------------
AlejandRo      |1
;


checkColumnNameWithNestedArithmeticFunctionCallsOnTableColumn
SELECT CHAR(emp_no % 10000) AS c FROM "test_emp" WHERE emp_no > 10064 ORDER BY emp_no LIMIT 1;

c:s
A
;

checkColumnNameWithComplexNestedArithmeticFunctionCallsOnTableColumn1
SELECT CHAR(emp_no % (7000 + 3000)) AS c FROM "test_emp" WHERE emp_no > 10065 ORDER BY emp_no LIMIT 1;

c:s
B
;


checkColumnNameWithComplexNestedArithmeticFunctionCallsOnTableColumn2
SELECT CHAR((emp_no % (emp_no - 1 + 1)) + 67) AS c FROM "test_emp" WHERE emp_no > 10066 ORDER BY emp_no LIMIT 1;

c:s
C
;
