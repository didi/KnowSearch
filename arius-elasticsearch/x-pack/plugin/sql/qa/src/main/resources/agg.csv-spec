// To mute tests follow example in file: example.csv-spec

//
// Aggs not supported by H2 / traditional SQL stores
//

singlePercentileWithoutComma
SELECT gender, PERCENTILE(emp_no, 90 + 7) p1 FROM test_emp GROUP BY gender;

gender:s             | p1:d
null                 |10019.0           
F                    |10099.51          
M                    |10095.789999999999
;

singlePercentileWithComma
SELECT gender, PERCENTILE(emp_no, 97.76) p1 FROM test_emp GROUP BY gender;

gender:s             | p1:d
null                 |10019.0           
F                    |10099.7608          
M                    |10096.2232
;

multiplePercentilesOneWithCommaOneWithout
SELECT gender, PERCENTILE(emp_no, 92.45) p1, PERCENTILE(emp_no, 91) p2 FROM test_emp GROUP BY gender;

gender:s             | p1:d                 | p2:d
null                 |10018.745             |10018.599999999999
F                    |10098.0085            |10096.119999999999
M                    |10091.393             |10090.37       
;

multiplePercentilesWithoutComma
SELECT gender, PERCENTILE(emp_no, 91) p1, PERCENTILE(emp_no, 89) p2 FROM test_emp GROUP BY gender;

gender:s             | p1:d                 | p2:d
null                 |10018.599999999999    |10018.4        
F                    |10096.119999999999    |10093.74       
M                    |10090.37              |10086.92       
;

multiplePercentilesWithComma
SELECT gender, PERCENTILE(emp_no, 85.7) p1, PERCENTILE(emp_no, 94.3) p2 FROM test_emp GROUP BY gender;

gender:s             | p1:d                 | p2:d
null                 |10018.070000000002    |10018.929999999998
F                    |10091.343             |10098.619         
M                    |10084.349             |10093.502         
;

percentileRank
SELECT gender, PERCENTILE_RANK(emp_no, 10000 + 25) rank FROM test_emp GROUP BY gender;

gender:s             | rank:d
null                 |100.0             
F                    |17.424242424242426
M                    |15.350877192982457
;

multiplePercentileRanks
SELECT gender, PERCENTILE_RANK(emp_no, 10030.0) rank1, PERCENTILE_RANK(emp_no, 10025) rank2 FROM test_emp GROUP BY gender;

gender:s             | rank1:d              | rank2:d
null                 |100.0                 |100.0             
F                    |21.445221445221442    |17.424242424242426
M                    |21.929824561403507    |15.350877192982457
;

multiplePercentilesAndPercentileRank
SELECT gender, PERCENTILE(emp_no, 97.76) p1, PERCENTILE(emp_no, 93.3) p2, PERCENTILE_RANK(emp_no, 10025) rank FROM test_emp GROUP BY gender;

gender:s             | p1:d                 | p2:d                 | rank:d
null                 |10019.0               |10018.83              |100.0             
F                    |10099.7608            |10098.289             |17.424242424242426
M                    |10096.2232            |10092.362             |15.350877192982457
;

sum
SELECT SUM(salary) FROM test_emp;

  SUM(salary)
---------------
4824855
;

aggregateWithCastPruned
SELECT CAST(SUM(salary) AS INTEGER) FROM test_emp;

 CAST(SUM(salary) AS INTEGER)
-----------------------------
4824855
;

aggregateWithUpCast
SELECT CAST(SUM(salary) AS DOUBLE) FROM test_emp;

  CAST(SUM(salary) AS DOUBLE)
-----------------------------
4824855.0
;

aggregateWithUpCastAsFloat
SELECT CAST(SUM(salary) AS FLOAT) FROM test_emp;

  CAST(SUM(salary) AS FLOAT)
-----------------------------
4824855.0
;

aggregateWithCastNumericToString
SELECT CAST(AVG(salary) AS VARCHAR) FROM test_emp;

  CAST(AVG(salary) AS VARCHAR):s
--------------------------------
48248.55
;

kurtosisAndSkewnessNoGroup
SELECT KURTOSIS(emp_no) k, SKEWNESS(salary) s FROM test_emp;

k:d                  | s:d
1.7997599759975997   | 0.2707722118423227
;

kurtosisAndSkewnessGroup
SELECT gender, KURTOSIS(salary) k, SKEWNESS(salary) s FROM test_emp GROUP BY gender;

gender:s             | k:d                  | s:d

null                 |2.2215791166941923    |-0.03373126000214023
F                    |1.7873117044424276    |0.05504995122217512 
M                    |2.280646181070106     |0.44302407229580243
;

nullAggs
SELECT MAX(languages) max, MIN(languages) min, SUM(languages) sum, AVG(languages) avg,
       PERCENTILE(languages, 80) percent, PERCENTILE_RANK(languages, 3) percent_rank, 
       KURTOSIS(languages) kurtosis, SKEWNESS(languages) skewness  
       FROM test_emp GROUP BY languages ORDER BY languages ASC LIMIT 5;

      max:bt   |      min:bt   |      sum:bt   |      avg:d   |    percent:d  | percent_rank:d|   kurtosis:d  |   skewness:d    
---------------+---------------+---------------+--------------+---------------+---------------+---------------+---------------
null           |null           |null           |null          |null           |null           |null           |null           
1              |1              |15             |1             |1.0            |100.0          |NaN            |NaN            
2              |2              |38             |2             |2.0            |100.0          |NaN            |NaN            
3              |3              |51             |3             |3.0            |100.0          |NaN            |NaN            
4              |4              |72             |4             |4.0            |0.0            |NaN            |NaN   
;

aggSumWithColumnRepeated
SELECT gender AS g, gender, SUM(salary) AS s3, SUM(salary), SUM(salary) AS s5 FROM test_emp GROUP BY gender;

g:s  | gender:s  | s3:i  | SUM(salary):i | s5:i
null |null       |487605 |487605         |487605
F    |F          |1666196|1666196        |1666196
M    |M          |2671054|2671054        |2671054
;

aggSumWithAliasWithColumnRepeated
SELECT gender AS g, gender, SUM(salary) AS s3, SUM(salary), SUM(salary) AS s5 FROM test_emp GROUP BY g;

g:s  | gender:s  | s3:i  | SUM(salary):i | s5:i
null |null       |487605 |487605         |487605
F    |F          |1666196|1666196        |1666196
M    |M          |2671054|2671054        |2671054
;

aggSumWithNumericRefWithColumnRepeated
SELECT gender AS g, gender, SUM(salary) AS s3, SUM(salary), SUM(salary) AS s5 FROM test_emp GROUP BY 2;

g:s  | gender:s  | s3:i  | SUM(salary):i | s5:i
null |null       |487605 |487605         |487605
F    |F          |1666196|1666196        |1666196
M    |M          |2671054|2671054        |2671054
;

aggByComplexCastedValue
SELECT CONVERT(CONCAT(LTRIM(CONVERT("emp_no", SQL_VARCHAR)), LTRIM(CONVERT("languages", SQL_VARCHAR))), SQL_BIGINT) AS "TEMP"
FROM "test_emp" GROUP BY "TEMP" ORDER BY "TEMP" LIMIT 20;

    TEMP:l      
---------------
10020          
10021          
10022          
10023          
10024          
10025          
10026          
10027          
10028          
10029          
100012         
100025         
100034         
100045         
100051         
100063         
100074         
100082         
100091         
100104         
;

aggAndOrderByCastedValue
SELECT CHAR_LENGTH(SPACE(CAST(languages AS SMALLINT))), COUNT(*) FROM test_emp GROUP BY 1 ORDER BY 1 DESC;

CHAR_LENGTH(SPACE(CAST(languages AS SMALLINT))):i|   COUNT(*):l
-------------------------------------------------+---------------
5                                                |21
4                                                |18
3                                                |17
2                                                |19
1                                                |15
null                                             |10
;

aggAndOrderByCastedFunctionValue
SELECT ROUND(SQRT(CAST(EXP(languages) AS SMALLINT)),2), COUNT(*) FROM test_emp GROUP BY 1 ORDER BY 1 DESC;

ROUND(SQRT(CAST(EXP(languages) AS SMALLINT)),2):d|  COUNT(*):l
-------------------------------------------------+---------------
12.17                                            |21
7.42                                             |18
4.47                                             |17
2.65                                             |19
1.73                                             |15
null                                             |10
;

groupByRoundWithTwoParams
SELECT ROUND(YEAR("birth_date"), -2) FROM test_emp GROUP BY ROUND(YEAR("birth_date"), -2);

ROUND(YEAR("birth_date"), -2)
-----------------------------
null
2000
;

groupByTruncateWithTwoParams
SELECT TRUNCATE(YEAR("birth_date"), -2) FROM test_emp GROUP BY TRUNCATE(YEAR("birth_date"), -2);

TRUNCATE(YEAR("birth_date"), -2)
--------------------------------
null
1900
;
// Fails for H2
groupByCastScalarWithNumericRef
SELECT CAST(ABS(EXTRACT(YEAR FROM "birth_date")) AS BIGINT) FROM test_emp GROUP BY 1 ORDER BY 1 NULLS FIRST;

CAST(ABS(EXTRACT(YEAR FROM "birth_date")) AS BIGINT):l
------------------------------------------------------
null
1952
1953
1954
1955
1956
1957
1958
1959
1960
1961
1962
1963
1964
1965
;

groupByConvertScalar
SELECT CONVERT(ABS(EXTRACT(YEAR FROM "birth_date")), SQL_BIGINT) FROM test_emp GROUP BY CONVERT(ABS(EXTRACT(YEAR FROM "birth_date")), SQL_BIGINT) ORDER BY CONVERT(ABS(EXTRACT(YEAR FROM "birth_date")), SQL_BIGINT) NULLS FIRST;


CONVERT(ABS(EXTRACT(YEAR FROM "birth_date")), SQL_BIGINT):l
-----------------------------------------------------------
null
1952
1953
1954
1955
1956
1957
1958
1959
1960
1961
1962
1963
1964
1965
;


groupByConvertScalarWithAlias
SELECT CONVERT(ABS(EXTRACT(YEAR FROM "birth_date")), SQL_BIGINT) as "convert" FROM test_emp GROUP BY "convert" ORDER BY "convert" NULLS FIRST;

convert:l
---------
null
1952
1953
1954
1955
1956
1957
1958
1959
1960
1961
1962
1963
1964
1965
;

groupByConvertScalarWithNumericRef
SELECT CONVERT(ABS(EXTRACT(YEAR FROM "birth_date")), SQL_BIGINT) FROM test_emp GROUP BY 1 ORDER BY 1 NULLS FIRST;

CONVERT(ABS(EXTRACT(YEAR FROM "birth_date")), SQL_BIGINT):l
-----------------------------------------------------------
null
1952
1953
1954
1955
1956
1957
1958
1959
1960
1961
1962
1963
1964
1965
;

groupByConstantScalar
SELECT PI() * emp_no FROM test_emp GROUP BY PI() * emp_no ORDER BY PI() * emp_no LIMIT 10;

PI() * emp_no:d
---------------
31419.0681285515
31422.2097212051
31425.3513138587
31428.4929065123
31431.6344991659
31434.7760918195
31437.9176844731
31441.0592771266
31444.2008697802
31447.3424624338
;

groupByConstantScalarWithOrderByDesc
SELECT PI() * emp_no FROM test_emp GROUP BY PI() * emp_no ORDER BY PI() * emp_no DESC LIMIT 10;

PI() * emp_no:d
-------
31730.0858012569
31726.9442086033
31723.8026159497
31720.6610232961
31717.5194306425
31714.3778379889
31711.2362453353
31708.0946526817
31704.9530600281
31701.8114673746
;

groupByConstantScalarWithAlias
SELECT PI() * emp_no AS "value" FROM test_emp GROUP BY value ORDER BY value LIMIT 10;

value:d
-------
31419.0681285515
31422.2097212051
31425.3513138587
31428.4929065123
31431.6344991659
31434.7760918195
31437.9176844731
31441.0592771266
31444.2008697802
31447.3424624338
;

groupByConstantScalarWithNumericRef
SELECT PI() * emp_no FROM test_emp GROUP BY 1 ORDER BY 1 DESC LIMIT 10;

PI() * emp_no:d
-------
31730.0858012569
31726.9442086033
31723.8026159497
31720.6610232961
31717.5194306425
31714.3778379889
31711.2362453353
31708.0946526817
31704.9530600281
31701.8114673746
;

groupByFieldAndConstantScalarWithMultipleOrderBy
SELECT gender, emp_no % 3 + PI() FROM test_emp GROUP BY gender, emp_no % 3 + PI() ORDER BY gender, emp_no % 3 + PI() DESC LIMIT 8;

gender:s    |emp_no % 3 + PI():d
------------+------------------
null        |5.1415926535
null        |4.1415926535
null        |3.1415926535
F           |5.1415926535
F           |4.1415926535
F           |3.1415926535
M           |5.1415926535
M           |4.1415926535
;

groupByFieldAndConstantScalarWithAliasWithOrderByDesc
SELECT gender, emp_no % 3 + PI() as p FROM test_emp GROUP BY gender, emp_no % 3 + PI() ORDER BY gender DESC, p DESC LIMIT 8;

gender:s    |p:d
------------+------------------
M           |5.1415926535
M           |4.1415926535
M           |3.1415926535
F           |5.1415926535
F           |4.1415926535
F           |3.1415926535
null        |5.1415926535
null        |4.1415926535
;

//
// Grouping functions
//


histogramNumeric
SELECT HISTOGRAM(salary, 5000) AS h FROM test_emp GROUP BY h;

       h       
---------------
25000          
30000          
35000          
40000          
45000          
50000          
55000          
60000          
65000          
70000  
;

histogramDateTime
schema::h:ts|c:l
SELECT HISTOGRAM(birth_date, INTERVAL 1 YEAR) AS h, COUNT(*) as c FROM test_emp GROUP BY h;

           h            |       c       
------------------------+---------------
null                    |10             
1952-01-01T00:00:00.000Z|8              
1953-01-01T00:00:00.000Z|11             
1954-01-01T00:00:00.000Z|8              
1955-01-01T00:00:00.000Z|4              
1956-01-01T00:00:00.000Z|5              
1957-01-01T00:00:00.000Z|4              
1958-01-01T00:00:00.000Z|7              
1959-01-01T00:00:00.000Z|9              
1960-01-01T00:00:00.000Z|8              
1961-01-01T00:00:00.000Z|8              
1962-01-01T00:00:00.000Z|6              
1963-01-01T00:00:00.000Z|7              
1964-01-01T00:00:00.000Z|4              
1965-01-01T00:00:00.000Z|1              
;

histogramDateTimeWithCountAndOrder
schema::h:ts|c:l
SELECT HISTOGRAM(birth_date, INTERVAL 1 YEAR) AS h, COUNT(*) as c FROM test_emp GROUP BY h ORDER BY h DESC;

           h            |       c       
------------------------+---------------
1965-01-01T00:00:00.000Z|1              
1964-01-01T00:00:00.000Z|4              
1963-01-01T00:00:00.000Z|7              
1962-01-01T00:00:00.000Z|6              
1961-01-01T00:00:00.000Z|8              
1960-01-01T00:00:00.000Z|8              
1959-01-01T00:00:00.000Z|9              
1958-01-01T00:00:00.000Z|7              
1957-01-01T00:00:00.000Z|4              
1956-01-01T00:00:00.000Z|5              
1955-01-01T00:00:00.000Z|4              
1954-01-01T00:00:00.000Z|8              
1953-01-01T00:00:00.000Z|11             
1952-01-01T00:00:00.000Z|8              
null                    |10             
;

histogramDateTimeWithMonthOnTop
schema::h:i|c:l
SELECT HISTOGRAM(MONTH(birth_date), 2) AS h, COUNT(*) as c FROM test_emp GROUP BY h ORDER BY h DESC;

       h       |       c       
---------------+---------------
12             |7              
10             |17             
8              |16             
6              |16             
4              |18             
2              |10             
0              |6              
null           |10    
;

histogramDateTimeWithYearOnTop
schema::h:i|c:l
SELECT HISTOGRAM(YEAR(birth_date), 2) AS h, COUNT(*) as c FROM test_emp GROUP BY h ORDER BY h DESC;
       h       |       c       
---------------+---------------
1964           |5              
1962           |13             
1960           |16             
1958           |16             
1956           |9              
1954           |12             
1952           |19             
null           |10   
;

histogramYearOnDateTimeWithScalars
schema::year:i|c:l
SELECT YEAR(CAST(birth_date + INTERVAL 5 YEARS AS DATE) + INTERVAL 20 MONTHS) AS year, COUNT(*) as c FROM test_emp GROUP BY 1;

     year      |   c
---------------+---------------
null           |10
1958           |2
1959           |12
1960           |7
1961           |7
1962           |4
1963           |5
1964           |5
1965           |7
1966           |9
1967           |7
1968           |7
1969           |8
1970           |6
1971           |4
;

histogramNumericWithExpression
schema::h:i|c:l
SELECT HISTOGRAM(emp_no % 100, 10) AS h, COUNT(*) as c FROM test_emp GROUP BY h ORDER BY h DESC;

       h       |       c       
---------------+---------------
90             |10             
80             |10             
70             |10             
60             |10             
50             |10             
40             |10             
30             |10             
20             |10             
10             |10             
0              |10   
;

histogramGroupByWithoutAlias
schema::h:ts|c:l
SELECT HISTOGRAM(birth_date, INTERVAL 1 YEAR) AS h, COUNT(*) as c FROM test_emp GROUP BY HISTOGRAM(birth_date, INTERVAL 1 YEAR) ORDER BY h DESC;

           h            |       c       
------------------------+---------------
1965-01-01T00:00:00.000Z|1              
1964-01-01T00:00:00.000Z|4              
1963-01-01T00:00:00.000Z|7              
1962-01-01T00:00:00.000Z|6              
1961-01-01T00:00:00.000Z|8              
1960-01-01T00:00:00.000Z|8              
1959-01-01T00:00:00.000Z|9              
1958-01-01T00:00:00.000Z|7              
1957-01-01T00:00:00.000Z|4              
1956-01-01T00:00:00.000Z|5              
1955-01-01T00:00:00.000Z|4              
1954-01-01T00:00:00.000Z|8              
1953-01-01T00:00:00.000Z|11             
1952-01-01T00:00:00.000Z|8              
null                    |10             
;

countAll
schema::all_names:l|c:l
SELECT COUNT(ALL first_name) all_names, COUNT(*) c FROM test_emp;

   all_names   |       c
---------------+---------------
90             |100 
;

countDistinctAndLiteral
schema::ln:l|ccc:l
SELECT COUNT(last_name) ln, COUNT(*) ccc FROM test_emp GROUP BY gender HAVING ln>5 AND ccc>5;

      ln       |     ccc     
---------------+-------------
10             |10           
33             |33
57             |57                
;

countSmallCountTypesWithHaving
schema::ln:l|dln:l|fn:l|dfn:l|ccc:l
SELECT COUNT(last_name) ln, COUNT(distinct last_name) dln, COUNT(first_name) fn, COUNT(distinct first_name) dfn, COUNT(*) ccc FROM test_emp GROUP BY gender HAVING dln>5 AND ln>32 AND dfn>1 AND fn>1 AND ccc>5;

      ln       |     dln     |      fn       |     dfn    |      ccc
---------------+-------------+---------------+------------+-------------
33             |32           |32             |32          |33
57             |54           |48             |48          |57
;


countAllCountTypesWithHaving
schema::ln:l|dln:l|fn:l|dfn:l|ccc:l
SELECT COUNT(last_name) ln, COUNT(distinct last_name) dln, COUNT(first_name) fn, COUNT(distinct first_name) dfn, COUNT(*) ccc FROM test_emp GROUP BY gender HAVING dln>5 AND ln>32 AND dfn>1 AND fn>1 AND ccc>5;

      ln       |     dln     |      fn       |     dfn    |      ccc
---------------+-------------+---------------+------------+-------------
33             |32           |32             |32          |33
57             |54           |48             |48          |57
;

aggCountEqualityFalse
schema::areEqual:b|ln:l|dln:l
SELECT COUNT(last_name)=COUNT(DISTINCT last_name) AS areEqual, COUNT(last_name) ln, COUNT(DISTINCT last_name) dln FROM test_emp;

   areEqual    |      ln       |      dln
---------------+---------------+---------------
false          |100            |96
;

aggCountEqualityTrue
schema::areEqual:b|fn:l|dfn:l
SELECT COUNT(first_name)=COUNT(DISTINCT first_name) AS areEqual, COUNT(first_name) fn, COUNT(DISTINCT first_name) dfn FROM test_emp;

   areEqual    |      fn       |      dfn
---------------+---------------+---------------
true           |90             |90
;

aggCountWithNull
schema::COUNT(NULL):l|COUNT(*):l|COUNT(DISTINCT languages):l|languages:bt
SELECT COUNT(NULL), COUNT(*), COUNT(DISTINCT languages), languages FROM test_emp GROUP BY languages ORDER BY languages DESC;

  COUNT(NULL)  |   COUNT(*)    |COUNT(DISTINCT languages)|   languages   
---------------+---------------+-------------------------+---------------
null           |21             |1                        |5              
null           |18             |1                        |4              
null           |17             |1                        |3              
null           |19             |1                        |2              
null           |15             |1                        |1              
null           |10             |0                        |null          
;

aggCountZeroDocuments
schema::COUNT(NULL):l|COUNT(*):l|COUNT(DISTINCT languages):l
SELECT COUNT(NULL), COUNT(*), COUNT(DISTINCT languages) FROM test_emp WHERE languages > 100;

  COUNT(NULL)  |   COUNT(*)    |COUNT(DISTINCT languages)
---------------+---------------+-------------------------
null           |0              |0
;

aggCountAllEquality
schema::areEqual:b|afn:l
SELECT COUNT(first_name)=COUNT(ALL first_name) AS areEqual, COUNT(ALL first_name) afn FROM test_emp;

   areEqual    |      afn      
---------------+---------------
true           |90             
;

aggCountAllDifferentFields
schema::areEqual:b|afn:l|aln:l
SELECT COUNT(ALL last_name)=COUNT(ALL first_name) AS areEqual, COUNT(ALL first_name) afn, COUNT(ALL last_name) aln FROM test_emp;

   areEqual    |      afn      |      aln
---------------+---------------+---------------
false          |90             |100
;

topHitsAsMinAndMax
schema::min:s|max:s|first:s|last:s
SELECT MIN(first_name) as min, MAX(first_name) as max, FIRST(first_name) as first, LAST(first_name) as last FROM test_emp;

    min        |   max         |   first      |   last
---------------+---------------+--------------+----------
   Alejandro   |   Zvonko      |   Alejandro  |   Zvonko
;

topHitsAsMinAndMaxAndGroupBy
schema::gender:s|min:s|max:s|first:s|last:s
SELECT gender, MIN(first_name) as min, MAX(first_name) as max, FIRST(first_name) as first, LAST(first_name) as last FROM test_emp GROUP BY gender ORDER BY gender;

    gender     |   min         |   max        |   first       |   last
---------------+---------------+--------------+---------------+----------
null           |   Berni       |   Patricio   |   Berni       |   Patricio
F              |   Alejandro   |   Xinglin    |   Alejandro   |   Xinglin
M              |   Amabile     |   Zvonko     |   Amabile     |   Zvonko
;

topHitsWithOneArgAndGroupBy
schema::gender:s|first:s|last:s
SELECT gender, FIRST(first_name) as first, LAST(first_name) as last FROM test_emp GROUP BY gender ORDER BY gender;

    gender     |   first       |   last
---------------+---------------+---------------
null           |   Berni       |   Patricio
F              |   Alejandro   |   Xinglin
M              |   Amabile     |   Zvonko
;

topHitsWithTwoArgsAndGroupBy
schema::gender:s|first:s|last:s
SELECT gender, FIRST(first_name, birth_date) as first, LAST(first_name, birth_date) as last FROM test_emp GROUP BY gender ORDER BY gender;

    gender     |   first       |   last
---------------+---------------+---------------
null           |   Lillian     |   Eberhardt
F              |   Sumant      |   Valdiodio
M              |   Remzi       |   Hilari
;

topHitsWithTwoArgsAndGroupByWithNullsOnTargetField
schema::gender:s|first:s|last:s
SELECT gender, FIRST(first_name, birth_date) AS first, LAST(first_name, birth_date) AS last FROM test_emp WHERE emp_no BETWEEN 10025 AND 10035 GROUP BY gender ORDER BY gender;

    gender     |   first       |   last
---------------+---------------+---------------
F              |   null        |   Divier
M              |   null        |   Domenick
;

topHitsWithTwoArgsAndGroupByWithNullsOnSortingField
schema::gender:s|first:s|last:s
SELECT gender, FIRST(first_name, birth_date) AS first, LAST(first_name, birth_date) AS last FROM test_emp WHERE emp_no BETWEEN 10047 AND 10052 GROUP BY gender ORDER BY gender;

    gender     |   first       |   last
---------------+---------------+---------------
F              |   Basil       |   Basil
M              |   Hidefumi    |   Heping
;

topHitsWithTwoArgsAndGroupByWithNullsOnTargetAndSortingField
schema::gender:s|first:s|last:s
SELECT gender, FIRST(first_name, birth_date) AS first, LAST(first_name, birth_date) AS last FROM test_emp WHERE emp_no BETWEEN 10037 AND 10052 GROUP BY gender ORDER BY gender;

    gender     |   first     |  last
---------------+-------------+-----------------
F              |   Basil     |  Weiyi
M              |   Hidefumi  |  null
;

topHitsWithTwoArgsAndGroupByWithAllNullsOnTargetField
schema::gender:s|first:s|last:s
SELECT gender, FIRST(first_name, birth_date) AS first, LAST(first_name, birth_date) AS last FROM test_emp WHERE emp_no BETWEEN 10030 AND 10037 GROUP BY gender ORDER BY gender;

    gender     |   first       |   last
---------------+---------------+---------------
F              |   null        |   null
M              |   null        |   null
;

topHitsOnDatetime
schema::gender:s|first:i|last:i
SELECT gender, month(first(birth_date, languages)) first, month(last(birth_date, languages)) last FROM test_emp GROUP BY gender ORDER BY gender;

    gender     |   first       |   last
---------------+---------------+---------------
null           |   1           |   10
F              |   4           |   6
M              |   1           |   4
;

medianAbsoluteDeviation
schema::gender:s|mad:d
SELECT gender, MAD(salary) AS mad FROM test_emp GROUP BY gender ORDER BY gender;

    gender     |      mad      
---------------+---------------
null           |10789.0        
F              |12719.0        
M              |8905.0         
;

medianAbsoluteDeviationOnTwoFields
schema::gender:s|avg:l|mad_s:l|mad_l:d
SELECT gender, FLOOR(AVG(salary)) AS avg, FLOOR(MAD(salary)) AS mad_s, MAD(languages) AS mad_l FROM test_emp GROUP BY gender ORDER BY gender;

    gender     |      avg      |     mad_s     |     mad_l     
---------------+---------------+---------------+---------------
null           |48760          |10789          |2.0            
F              |50490          |12719          |1.5            
M              |46860          |8905           |1.0     
;

medianAbsoluteDeviationOnSecondaryFieldWithOrder
schema::gender:s|mad:d
SELECT gender, MAD(salary) AS mad FROM test_emp GROUP BY gender ORDER BY mad ASC;

    gender     |      mad      
---------------+---------------
M              |8905.0         
null           |10789.0        
F              |12719.0         
;


medianAbsoluteDeviationOnSecondaryFieldWithOrderAndHaving
schema::gender:s|mad:d
SELECT gender, MAD(salary) AS mad FROM test_emp GROUP BY gender HAVING mad > 10000 ORDER BY mad ASC;

    gender     |      mad      
---------------+---------------
null           |10789.0        
F              |12719.0         
;
