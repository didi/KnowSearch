// To mute tests follow example in file: example.csv-spec

//
// SELECT with = and !=
//
// Need to CAST as STRING since for boolean types jdbc CSV translates null -> false
equalsSelectClause
SELECT CAST(4 = 4 AS STRING), CAST(NOT 4 = 4 AS STRING), CAST(3 = 4 AS STRING), CAST(NOT 3 = 4 AS STRING), CAST(1 = null AS STRING), CAST(NOT null = 1 AS STRING);

CAST(4 = 4 AS STRING):s|CAST(NOT 4 = 4 AS STRING):s|CAST(3 = 4 AS STRING):s|CAST(NOT 3 = 4 AS STRING):s|CAST(1 = null AS STRING):s|CAST(NOT null = 1 AS STRING):s
-----------------------+---------------------------+-----------------------+---------------------------+--------------------------+----------------------------
true                   |false                      |false                  |true                       |null                      |null                        
;

notEqualsSelectClause
SELECT CAST(4 != 4 AS STRING), CAST(NOT 4 != 4 AS STRING), CAST(3 != 4 AS STRING), CAST(NOT 3 != 4 AS STRING), CAST(1 != null AS STRING), CAST(NOT 1 != null AS STRING);

CAST(4 != 4 AS STRING):s|CAST(NOT 4 != 4 AS STRING):s|CAST(3 != 4 AS STRING):s|CAST(NOT 3 != 4 AS STRING):s|CAST(1 != null AS STRING):s|CAST(NOT 1 != null AS STRING):s
------------------------+----------------------------+------------------------+----------------------------+---------------------------+-------------------------------
false                   |true                        |true                    |false                       |null                       |null    
;

equalSelectClauseWithTableColumns
SELECT CAST(languages = 2 AS STRING), CAST(NOT languages = 2 AS STRING), CAST(languages = null AS STRING), CAST(NOT languages = null AS STRING)
FROM "test_emp" WHERE emp_no IN(10018, 10019, 10020) ORDER BY emp_no;

CAST(languages = 2 AS STRING):s|CAST(NOT languages = 2 AS STRING):s|CAST(languages = null AS STRING):s|CAST(NOT languages = null AS STRING):s
-------------------------------+-----------------------------------+----------------------------------+--------------------------------------
true                           |false                              |null                              |null                                
false                          |true                               |null                              |null                                
null                           |null                               |null                              |null  
;

notEqualsAndNotEqualsSelectClauseWithTableColumns
SELECT CAST(languages != 2 AS STRING), CAST(NOT languages != 2 AS STRING), CAST(languages != null AS STRING), CAST(NOT languages != null AS STRING)
FROM "test_emp" WHERE emp_no IN(10018, 10019, 10020) ORDER BY emp_no;

CAST(languages != 2 AS STRING):s|CAST(NOT languages != 2 AS STRING):s|CAST(languages != null AS STRING):s|CAST(NOT languages != null AS STRING):s
--------------------------------+------------------------------------+-----------------------------------+---------------------------------------
false                           |true                                |null                               |null                                 
true                            |false                               |null                               |null                                 
null                            |null                                |null                               |null   
;


//
// SELECT with OR and AND and NULL handling
//
// Need to CAST as STRING since for boolean types jdbc CSV translates null -> false
selectWithOrAndNullHandling
SELECT CAST(true OR null AS STRING), CAST(null OR true AS STRING), CAST(false OR null AS STRING), CAST(null OR false AS STRING), CAST(null OR null AS STRING);

CAST(true OR null AS STRING):s|CAST(null OR true AS STRING):s|CAST(false OR null AS STRING):s|CAST(null OR false AS STRING):s|CAST(null OR null AS STRING):s
------------------------------+------------------------------+-------------------------------+-------------------------------+----------------------------
true                          |true                          |null                           |null                           |null    
;

selectWithAndAndNullHandling
SELECT CAST(true AND null AS STRING), CAST(null AND true AS STRING), CAST(false AND null AS STRING), CAST(null AND false AS STRING), CAST(null AND null AS STRING);

CAST(true AND null AS STRING):s|CAST(null AND true AS STRING):s|CAST(false AND null AS STRING):s|CAST(null AND false AS STRING):s|CAST(null AND null AS STRING):s
-------------------------------+-------------------------------+--------------------------------+--------------------------------+-----------------------------
null                           |null                           |false                           |false                           |null   
;

selectWithOrAndAndAndNullHandling_WithTableColumns
SELECT CAST(languages = 2 OR null AS STRING), CAST(languages = 2 AND null AS STRING) FROM test_emp WHERE emp_no BETWEEN 10018 AND 10020 ORDER BY emp_no;

CAST(languages = 2 OR null AS STRING):s|CAST(languages = 2 AND null AS STRING):s
---------------------------------------+----------------------------------------
true                                   |null                                  
null                                   |false                                 
null                                   |null       
;


//
// SELECT with IN
//
inWithLiterals
SELECT 1 IN (1,2,  3), 1 IN (2, 3);

1 IN (1,2,  3) |  1 IN (2, 3)  
---------------+---------------
true           |false     
;

inWithLiteralsAndFunctions
SELECT 1 IN (2 - 1, 2, 3), abs(-1) IN (2, 3, abs(4 - 5));

1 IN (2 - 1, 2, 3)|abs(-1) IN (2, 3, abs(4 - 5))
------------------+-----------------------------
true              |true 
;


inWithLiteralsAndNegation
SELECT 1 NOT IN (1, 1 + 1, 3), 1 NOT IN (2, 3);

1 NOT IN (1, 1 + 1, 3)|1 NOT IN (2, 3)
----------------------+---------------
false                 |true  
;

// Need to CAST as STRING since for boolean types the jdbc CSV translates null -> false
inWithNullHandling
SELECT CAST(2 IN (1, null, 3) AS STRING), CAST(3 IN (1, null, 3) AS STRING), CAST(null IN (1, null, 3) AS STRING), CAST(null IN (1, 2, 3) AS STRING);

CAST(2 IN (1, null, 3) AS STRING):s|CAST(3 IN (1, null, 3) AS STRING):s|CAST(null IN (1, null, 3) AS STRING):s|CAST(null IN (1, 2, 3) AS STRING):s
-----------------------------------+-----------------------------------+--------------------------------------+-----------------------------------
null                               |true                               |null                                  |null   
;

inWithNullHandlingAndNegation
SELECT CAST(NOT 2 IN (1, null, 3) AS STRING), CAST(3 NOT IN (1, null, 3) AS STRING), CAST(NOT null IN (1, null, 3) AS STRING), CAST(null NOT IN (1, 2, 3) AS STRING);

CAST(NOT 2 IN (1, null, 3) AS STRING):s|CAST(3 NOT IN (1, null, 3) AS STRING):s|CAST(NOT null IN (1, null, 3) AS STRING):s|CAST(null NOT IN (1, 2, 3) AS STRING):s
---------------------------------------+---------------------------------------+------------------------------------------+---------------------------------------
null                                   |false                                  |null                                      |null 
;

//
// SELECT with IN and table columns
//
inWithTableColumn
SELECT emp_no IN (10000, 10001, 10002) FROM test_emp WHERE emp_no BETWEEN 10001 AND 10004 ORDER BY emp_no;

 emp_no IN (10000, 10001, 10002):b
----------------------------------
true
true
false
false
;

inWithTableColumnAndFunction
SELECT emp_no IN (10000, 10000 + 1, abs(-10000 - 2)) FROM test_emp WHERE emp_no BETWEEN 10001 AND 10004 ORDER BY emp_no;

emp_no IN (10000, 10000 + 1, abs(-10000 - 2))
---------------------------------------------
true                                  
true                                  
false                                 
false 
;

inWithTableColumnAndNegation
SELECT emp_no NOT IN (10000, 10000 + 1, 10002) FROM test_emp WHERE emp_no BETWEEN 10001 AND 10004 ORDER BY emp_no;

emp_no NOT IN (10000, 10000 + 1, 10002)
---------------------------------------
false                           
false                           
true                            
true 
;

inWithTableColumnAndComplexFunctions
SELECT emp_no IN (1, abs(1 - 10002), 3) OR emp_no NOT IN (10000, 10000 + 2, 10003) FROM test_emp WHERE emp_no BETWEEN 10001 AND 10004 ORDER BY emp_no;

emp_no IN (1, abs(1 - 10002), 3) OR emp_no NOT IN (10000, 10000 + 2, 10003)
---------------------------------------------------------------------------
true                                                                       
false                                                                      
false                                                                      
true 
;


// Need to CAST as STRING since for boolean types the jdbc CSV translates null -> false
inWithTableColumnAndNullHandling
SELECT emp_no, CAST(languages IN (2, 3) AS STRING), CAST(languages IN (2, null, 3) AS STRING) FROM test_emp WHERE emp_no BETWEEN 10018 AND 10020 ORDER BY emp_no;

    emp_no:i   |CAST(languages IN (2, 3) AS STRING):s|CAST(languages IN (2, null, 3) AS STRING):s
---------------+-------------------------------------+-------------------------------------------
10018          |true                                 |true                                     
10019          |false                                |null                                     
10020          |null                                 |null    
;

inWithTableColumnAndNullHandlingAndNegation
SELECT emp_no, CAST(languages NOT IN (2, 3) AS STRING), CAST(NOT languages IN (2, null, 3) AS STRING) FROM test_emp WHERE emp_no BETWEEN 10018 AND 10020 ORDER BY emp_no;

    emp_no:i   |CAST(languages NOT IN (2, 3) AS STRING):s|CAST(NOT languages IN (2, null, 3) AS STRING):s
---------------+-----------------------------------------+-----------------------------------------------
10018          |false                                    |false                                        
10019          |true                                     |null                                         
10020          |null                                     |null  
;
