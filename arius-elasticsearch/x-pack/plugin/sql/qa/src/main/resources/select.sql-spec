// To mute tests follow example in file: example.sql-spec

//
// Basic SELECT
//

wildcardWithOrder
SELECT * FROM test_emp ORDER BY emp_no;
column
SELECT last_name FROM "test_emp" ORDER BY emp_no;
columnWithAlias
SELECT last_name AS l FROM "test_emp" ORDER BY emp_no;
columnWithAliasNoAs
SELECT last_name l FROM "test_emp" ORDER BY emp_no;
multipleColumnsNoAlias
SELECT first_name, last_name FROM "test_emp" ORDER BY emp_no;
multipleColumnWithAliasWithAndWithoutAs
SELECT first_name f, last_name AS l FROM "test_emp" ORDER BY emp_no;

//
// SELECT with LIMIT
//

wildcardWithLimit
SELECT * FROM "test_emp" ORDER BY emp_no LIMIT 5;
wildcardWithOrderWithLimit
SELECT * FROM "test_emp" ORDER BY emp_no LIMIT 5;
columnWithLimit
SELECT last_name FROM "test_emp" ORDER BY emp_no LIMIT 5;
columnWithAliasWithLimit
SELECT last_name AS l FROM "test_emp" ORDER BY emp_no LIMIT 5;
columnWithAliasNoAsWithLimit
SELECT last_name l FROM "test_emp" ORDER BY emp_no LIMIT 5;
multipleColumnsNoAliasWithLimit
SELECT first_name, last_name FROM "test_emp" ORDER BY emp_no LIMIT 5;
multipleColumnWithAliasWithAndWithoutAsWithLimit
SELECT first_name f, last_name AS l FROM "test_emp" ORDER BY emp_no LIMIT 5;
multipleColumnNoAliasWithColumnRepeatedWithLimit
SELECT salary, first_name, salary FROM test_emp ORDER BY salary LIMIT 3;
multipleColumnWithAliasWithAsWithColumnRepeatedWithLimit
SELECT salary, first_name, salary AS x FROM test_emp ORDER BY x LIMIT 3;
multipleColumnWithAliasWithAndWithoutAsWithColumnRepeatedWithLimit
SELECT salary, first_name, salary AS x, salary y FROM test_emp ORDER BY y LIMIT 3;

//
// SELECT constant literals with FROM
//

constantWithLimit
SELECT 3 FROM "test_emp" LIMIT 5;
constantAndColumnWithLimit
SELECT 3, first_name, last_name FROM "test_emp" ORDER BY emp_no LIMIT 5;
constantComparisonWithLimit
SELECT 1=1 AS bool FROM "test_emp" LIMIT 5;
constantComparisonAndColumnWithLimit
SELECT 1=1 AS bool, first_name, last_name FROM "test_emp" ORDER BY emp_no LIMIT 5;
castWithLiteralWithFrom
SELECT CAST(1 AS INT) AS constant FROM "test_emp" LIMIT 5;
castWithLiteralAndColumnWithFrom
SELECT CAST((CAST(languages AS BIT) OR CAST(1 AS BIT)) AS INT) AS bool FROM test_emp LIMIT 5;
castWithColumnAndLiteralCombinedAndSelectColumnWithFrom
SELECT CAST((CAST(languages AS BIT) OR CAST(1 AS BIT)) AS INT) AS bool, languages FROM test_emp ORDER BY languages ASC NULLS FIRST LIMIT 5;

//
// SELECT with CAST
//
//castWithLiteralToInt
//SELECT CAST(1 AS INT);
castOnColumnNumberToVarchar
SELECT CAST(emp_no AS VARCHAR) AS emp_no_cast FROM "test_emp" ORDER BY emp_no LIMIT 5;
castOnColumnNumberToLong
SELECT CAST(emp_no AS BIGINT) AS emp_no_cast FROM "test_emp" ORDER BY emp_no LIMIT 5;
castOnColumnNumberToSmallint
SELECT CAST(emp_no AS SMALLINT) AS emp_no_cast FROM "test_emp" ORDER BY emp_no LIMIT 5;
castOnColumnNumberWithAliasToInt
SELECT CAST(emp_no AS INT) AS emp_no_cast FROM "test_emp" ORDER BY emp_no LIMIT 5;
castOnColumnNumberToReal
SELECT CAST(emp_no AS REAL) AS emp_no_cast FROM "test_emp" ORDER BY emp_no LIMIT 5;
castOnColumnNumberToDouble
SELECT CAST(emp_no AS DOUBLE) AS emp_no_cast FROM "test_emp" ORDER BY emp_no LIMIT 5;
castOnColumnNumberToBoolean
SELECT CAST(emp_no AS BOOL) AS emp_no_cast FROM "test_emp" ORDER BY emp_no LIMIT 5;

//
// SELECT with IS NULL and IS NOT NULL
//
isNullAndIsNotNull
SELECT null IS NULL AS col1, null IS NOT NULL AS col2;
isNullAndIsNotNullAndNegation
SELECT NOT(null IS NULL) AS col1, NOT(null IS NOT NULL) AS col2;
isNullAndIsNotNullOverComparison
SELECT (null = 1) IS NULL AS col1, (null = 1) IS NOT NULL AS col2;
isNullAndIsNotNullOverComparisonWithNegation
SELECT NOT((null = 1) IS NULL) AS col1, NOT((null = 1) IS NOT NULL) AS col2;

//
// SELECT with IS NULL and IS NOT NULL with table columns
//
isNullAndIsNotNull_onTableColumns
SELECT languages IS NULL AS col1, languages IS NOT NULL AS col2 FROM "test_emp" WHERE emp_no IN (10018, 10019, 10020) ORDER BY emp_no;
isNullAndIsNotNullAndNegation_onTableColumns
SELECT NOT languages IS NULL AS col1, NOT(languages IS NOT NULL) AS col2 FROM test_emp WHERE emp_no IN (10018, 10019, 10020) ORDER BY emp_no;
isNullAndIsNotNullOverComparison_onTableColumns
SELECT (languages = 2) IS NULL AS col1, (languages = 2) IS NOT NULL AS col2 FROM test_emp WHERE emp_no IN (10018, 10019, 10020) ORDER BY emp_no;
isNullAndIsNotNullOverComparisonWithNegation_onTableColumns
SELECT NOT((languages = 2) IS NULL) AS col1, NOT((languages = 2) IS NOT NULL) AS col2 FROM test_emp WHERE emp_no IN (10018, 10019, 10020) ORDER BY emp_no;

//
// SELECT with functions locally evaluated
//
selectMathPI
SELECT PI() AS pi;
selectMathPIFromIndex
SELECT PI() AS pi FROM test_emp LIMIT 3;
selectMathPIFromIndexWithWhereEvaluatingToTrue
SELECT PI() AS pi FROM test_emp WHERE ROUND(PI(),2)=3.14;
selectMathPIFromIndexWithWhereEvaluatingToTrueAndWithLimit
SELECT PI() AS pi FROM test_emp WHERE ROUND(PI(),2)=3.14 LIMIT 3;
selectMathPIFromIndexWithWhereEvaluatingToFalse
SELECT PI() AS pi FROM test_emp WHERE PI()=5;
selectMathPIFromIndexWithWhereEvaluatingToFalseAndWithLimit
SELECT PI() AS pi FROM test_emp WHERE PI()=5 LIMIT 3;
