<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.didichuxing.datachannel.arius.admin.persistence.mysql.gateway.GatewayClusterDAO">
    <resultMap id="BaseResultMap" type="com.didichuxing.datachannel.arius.admin.common.bean.po.gateway.GatewayClusterPO">
        <result column="id" jdbcType="BIGINT" property="id" />
        <result column="cluster_name" jdbcType="VARCHAR" property="clusterName" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
        <result column="component_id" jdbcType="INTEGER" property="componentId"/>
        <result column="health" jdbcType="INTEGER" property="health"/>
        <result column="ecm_access" jdbcType="TINYINT" property="ecmAccess"/>
        <result column="memo" jdbcType="VARCHAR" property="memo"/>
        <result column="version" jdbcType="VARCHAR" property="version"/>
        <result column="proxy_address" jdbcType="VARCHAR" property="proxyAddress"/>
        <result column="data_center" jdbcType="VARCHAR" property="dataCenter"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, cluster_name, create_time,
        update_time,component_id,ecm_access,memo,version,health,proxy_address,data_center
    </sql>

    <insert id="insert" parameterType="com.didichuxing.datachannel.arius.admin.common.bean.po.gateway.GatewayClusterPO"
            useGeneratedKeys="true"
            keyColumn="id" keyProperty="id">
        insert ignore into gateway_cluster_info
        (cluster_name,component_id,ecm_access,health,proxy_address,memo,data_center)
        values
        (#{clusterName},#{componentId},#{ecmAccess},#{health},#{proxyAddress},#{memo},#{dataCenter})
    </insert>

   

    <select id="listAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from gateway_cluster_info
    </select>
    
    <select id="selectOneByClusterName" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from gateway_cluster_info
        where cluster_name = #{clusterName}
        limit 1
    </select>
    
    <select id="listByCondition"
      resultType="com.didichuxing.datachannel.arius.admin.common.bean.po.gateway.GatewayClusterPO">
        SELECT
        <include refid="Base_Column_List"/>
        FROM gateway_cluster_info
        <where>
            <if test="health != null">
                health = #{health}
            </if>
            <if test="clusterName != null and clusterName != ''">
                AND cluster_name like CONCAT('%', #{clusterName}, '%')
            </if>
        </where>
        <if test="sortTerm != null">
            order by ${sortTerm} ${sortType}
        </if>
        limit #{from}, #{size}
    </select>
    
    
    <select id="countByCondition" resultType="long">
        SELECT COUNT(1)
        FROM gateway_cluster_info
        <where>
            <if test="health != null">
                health = #{health}
            </if>
            <if test="clusterName != null and clusterName != ''">
                AND cluster_name like CONCAT('%', #{clusterName}, '%')
            </if>
        </where>
    </select>
    
    <select id="getOneById" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM gateway_cluster_info
        WHERE id = #{id}
    </select>
    
    <delete id="deleteOneById">
        DELETE
        FROM gateway_cluster_info
        WHERE id = #{id}
    </delete>
    
    <update id="updateOne" parameterType="com.didichuxing.datachannel.arius.admin.common.bean.po.gateway.GatewayClusterPO">
        UPDATE gateway_cluster_info
        <set>
            <if test="clusterName != null">
                cluster_name = #{clusterName},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="ecmAccess != null">
                ecm_access = #{ecmAccess},
            </if>
            <if test="memo != null">
                memo = #{memo},
            </if>
            <if test="componentId != null">
                component_id = #{componentId},
            </if>
            <if test="version != null">
                version = #{version},
            </if>
            <if test="health != null">
                health = #{health},
            </if>
            <if test="proxyAddress != null">
                proxy_address = #{proxyAddress},
            </if>
            <if test="dataCenter != null">
                data_center = #{dataCenter},
            </if>
        </set>
        WHERE id = #{id}
    </update>
    
    <select id="getClusterNameById" resultType="java.lang.String">
        SELECT cluster_name
        FROM gateway_cluster_info
        WHERE id = #{id}
    </select>
    
    <select id="getComponentIdById" resultType="java.lang.Integer">
        SELECT component_id
        FROM gateway_cluster_info
        WHERE id = #{id}
    </select>
    
    <select id="getOneByName" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM gateway_cluster_info
        WHERE cluster_name = #{name}
    </select>

    <select id="listByNames" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from gateway_cluster_info
        <where>
            <foreach collection="list" item="clusterName" open="cluster_name in (" separator="," close=")">
                #{clusterName}
            </foreach>
        </where>
    </select>

    <select id="getOneByComponentId" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM gateway_cluster_info
        WHERE component_id = #{componentId}
    </select>

    <update id="updateVersion">
        UPDATE gateway_cluster_info
        SET version = #{version} where component_id=#{componentId}
    </update>
</mapper>