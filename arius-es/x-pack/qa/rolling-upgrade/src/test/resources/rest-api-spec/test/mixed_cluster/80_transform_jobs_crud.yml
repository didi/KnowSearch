---
"Test put batch transform on mixed cluster":
  - do:
      cluster.health:
        index: "transform-airline-data"
        wait_for_status: green
        timeout: 70s

  - do:
      data_frame_transform_deprecated.put_transform:
        transform_id: "mixed-simple-transform"
        body: >
          {
            "source": { "index": "transform-airline-data" },
            "dest": { "index": "mixed-simple-transform-idx" },
            "pivot": {
              "group_by": { "airline": {"terms": {"field": "airline"}}},
              "aggs": {"avg_response": {"avg": {"field": "responsetime"}}}
            }
          }
  - match: { acknowledged: true }

  - do:
      data_frame_transform_deprecated.start_transform:
        transform_id: "mixed-simple-transform"
  - match: { acknowledged: true }
  - do:
      data_frame_transform_deprecated.get_transform_stats:
        transform_id: "mixed-simple-transform"
  - match: { count: 1 }
  - match: { transforms.0.id: "mixed-simple-transform" }
  # Since we are breaking the stats format between 7.3 and 7.4 (allowed because we're beta) we cannot
  # assert on state in the mixed cluster as it could be state at the top level or state.task_state
  #- match: { transforms.0.state: "/started|indexing|stopping|stopped/" }

  - do:
      data_frame_transform_deprecated.stop_transform:
        transform_id: "mixed-simple-transform"
        wait_for_completion: true
  - match: { acknowledged: true }

  - do:
      data_frame_transform_deprecated.get_transform_stats:
        transform_id: "mixed-simple-transform"
  - match: { count: 1 }
  - match: { transforms.0.id: "mixed-simple-transform" }
  # Since we are breaking the stats format between 7.3 and 7.4 (allowed because we're beta) we cannot
  # assert on state in the mixed cluster as it could be state at the top level or state.task_state
  #- match: { transforms.0.state: "stopped" }

  - do:
      data_frame_transform_deprecated.put_transform:
        transform_id: "mixed-complex-transform"
        body: >
          {
            "source": {
              "index": "transform-airline-data",
              "query": {
                "bool": {
                  "filter": {"term": {"airline": "ElasticAir"}}
                }
              }
            },
            "dest": {
              "index": "mixed-complex-transform-idx"
            },
            "pivot": {
              "group_by": {
                "airline": {"terms": {"field": "airline"}},
                "day": {"date_histogram": {"field": "timestamp", "calendar_interval": "1d"}},
                "every_50": {"histogram": {"field": "responsetime", "interval": 50}}
              },
              "aggs": {"avg_response": {"avg": {"field": "responsetime"}}}
            }
          }
  - match: { acknowledged: true }

  - do:
      data_frame_transform_deprecated.get_transform:
        transform_id: "mixed-complex-transform"
  - match: { count: 1 }
  - match: { transforms.0.id: "mixed-complex-transform" }

  - do:
      data_frame_transform_deprecated.start_transform:
        transform_id: "mixed-complex-transform"
  - match: { acknowledged: true }
  - do:
      data_frame_transform_deprecated.get_transform_stats:
        transform_id: "mixed-complex-transform"
  - match: { count: 1 }
  - match: { transforms.0.id: "mixed-complex-transform" }
  # Since we are breaking the stats format between 7.3 and 7.4 (allowed because we're beta) we cannot
  # assert on state in the mixed cluster as it could be state at the top level or state.task_state
  #- match: { transforms.0.state: "/started|indexing|stopping|stopped/" }

  - do:
      data_frame_transform_deprecated.stop_transform:
        transform_id: "mixed-complex-transform"
        wait_for_completion: true
  - match: { acknowledged: true }

  - do:
      data_frame_transform_deprecated.get_transform_stats:
        transform_id: "mixed-complex-transform"
  - match: { count: 1 }
  - match: { transforms.0.id: "mixed-complex-transform" }
  # Since we are breaking the stats format between 7.3 and 7.4 (allowed because we're beta) we cannot
  # assert on state in the mixed cluster as it could be state at the top level or state.task_state
  #- match: { transforms.0.state: "stopped" }

---
"Test put continuous transform on mixed cluster":
  - do:
      cluster.health:
        index: "transform-airline-data-cont"
        wait_for_status: green
        timeout: 70s

  - do:
      data_frame_transform_deprecated.put_transform:
        transform_id: "mixed-simple-continuous-transform"
        body: >
          {
            "source": { "index": "transform-airline-data-cont" },
            "dest": { "index": "mixed-simple-continuous-transform-idx" },
            "pivot": {
              "group_by": { "airline": {"terms": {"field": "airline"}}},
              "aggs": {"avg_response": {"avg": {"field": "responsetime"}}}
            },
            "sync": {
              "time": {
                "field": "time",
                "delay": "90m"
              }
            }
          }
  - match: { acknowledged: true }

  - do:
      data_frame_transform_deprecated.get_transform:
        transform_id: "mixed-simple-continuous-transform"
  - match: { count: 1 }
  - match: { transforms.0.id: "mixed-simple-continuous-transform" }
  - match: { transforms.0.sync.time.field: "time" }
  - match: { transforms.0.sync.time.delay: "90m" }
  - is_true: transforms.0.version
  - is_true: transforms.0.create_time

  - do:
      data_frame_transform_deprecated.start_transform:
        transform_id: "mixed-simple-continuous-transform"
  - match: { acknowledged: true }
  - do:
      data_frame_transform_deprecated.get_transform_stats:
        transform_id: "mixed-simple-continuous-transform"
  - match: { count: 1 }
  - match: { transforms.0.id: "mixed-simple-continuous-transform" }
  # Since we are breaking the stats format between 7.3 and 7.4 (allowed because we're beta) we cannot
  # assert on state in the mixed cluster as it could be state at the top level or state.task_state
  #- match: { transforms.0.state: "/started|indexing/" }

  - do:
      data_frame_transform_deprecated.stop_transform:
        transform_id: "mixed-simple-continuous-transform"
        wait_for_completion: true
  - match: { acknowledged: true }

  - do:
      data_frame_transform_deprecated.get_transform_stats:
        transform_id: "mixed-simple-continuous-transform"
  - match: { count: 1 }
  - match: { transforms.0.id: "mixed-simple-continuous-transform" }
  # Since we are breaking the stats format between 7.3 and 7.4 (allowed because we're beta) we cannot
  # assert on state in the mixed cluster as it could be state at the top level or state.task_state
  #- match: { transforms.0.state: "stopped" }

---
"Test GET, start, and stop old cluster batch transforms":
  - do:
      cluster.health:
        index: "transform-airline-data"
        wait_for_status: green
        timeout: 70s

  - do:
      data_frame_transform_deprecated.get_transform:
        transform_id: "old-simple-transform"
  - match: { count: 1 }
  - match: { transforms.0.id: "old-simple-transform" }
  - match: { transforms.0.source.index.0: "transform-airline-data" }
  - match: { transforms.0.dest.index: "old-simple-transform-idx" }
  - match: { transforms.0.pivot.group_by.airline.terms.field: "airline" }
  - match: { transforms.0.pivot.aggregations.avg_response.avg.field: "responsetime" }

  - do:
      data_frame_transform_deprecated.start_transform:
        transform_id: "old-simple-transform"
  - match: { acknowledged: true }
  - do:
      data_frame_transform_deprecated.get_transform_stats:
        transform_id: "old-simple-transform"
  - match: { count: 1 }
  - match: { transforms.0.id: "old-simple-transform" }
  # Since we are breaking the stats format between 7.3 and 7.4 (allowed because we're beta) we cannot
  # assert on state in the mixed cluster as it could be state at the top level or state.task_state
  #- match: { transforms.0.state: "/started|indexing|stopping|stopped/" }

  - do:
      data_frame_transform_deprecated.stop_transform:
        transform_id: "old-simple-transform"
        wait_for_completion: true
  - match: { acknowledged: true }
  - do:
      data_frame_transform_deprecated.get_transform_stats:
        transform_id: "old-simple-transform"
  - match: { count: 1 }
  - match: { transforms.0.id: "old-simple-transform" }
  # Since we are breaking the stats format between 7.3 and 7.4 (allowed because we're beta) we cannot
  # assert on state in the mixed cluster as it could be state at the top level or state.task_state
  #- match: { transforms.0.state: "stopped" }

  - do:
      data_frame_transform_deprecated.get_transform:
        transform_id: "old-complex-transform"
  - match: { count: 1 }
  - match: { transforms.0.id: "old-complex-transform" }
  - match: { transforms.0.source.index.0: "transform-airline-data" }
  - match: { transforms.0.dest.index: "old-complex-transform-idx" }
  - match: { transforms.0.pivot.group_by.airline.terms.field: "airline" }
  - match: { transforms.0.pivot.group_by.day.date_histogram.field: "timestamp" }
  - match: { transforms.0.pivot.group_by.every_50.histogram.field: "responsetime" }
  - match: { transforms.0.pivot.aggregations.avg_response.avg.field: "responsetime" }

  - do:
      data_frame_transform_deprecated.start_transform:
        transform_id: "old-complex-transform"
  - match: { acknowledged: true }
  - do:
      data_frame_transform_deprecated.get_transform_stats:
        transform_id: "old-complex-transform"
  - match: { count: 1 }
  - match: { transforms.0.id: "old-complex-transform" }
  # Since we are breaking the stats format between 7.3 and 7.4 (allowed because we're beta) we cannot
  # assert on state in the mixed cluster as it could be state at the top level or state.task_state
  #- match: { transforms.0.state: "/started|indexing|stopping|stopped/" }

  - do:
      data_frame_transform_deprecated.stop_transform:
        transform_id: "old-complex-transform"
        wait_for_completion: true
  - match: { acknowledged: true }
  - do:
      data_frame_transform_deprecated.get_transform_stats:
        transform_id: "old-complex-transform"
  - match: { count: 1 }
  - match: { transforms.0.id: "old-complex-transform" }
  # Since we are breaking the stats format between 7.3 and 7.4 (allowed because we're beta) we cannot
  # assert on state in the mixed cluster as it could be state at the top level or state.task_state
  #- match: { transforms.0.state: "stopped" }

---
"Test GET, stop, start, old continuous transforms":
  - do:
      cluster.health:
        index: "transform-airline-data-cont"
        wait_for_status: green
        timeout: 70s

  - do:
      data_frame_transform_deprecated.get_transform:
        transform_id: "old-simple-continuous-transform"
  - match: { count: 1 }
  - match: { transforms.0.id: "old-simple-continuous-transform" }
  - match: { transforms.0.sync.time.field: "time" }
  - match: { transforms.0.sync.time.delay: "90m" }
  - is_true: transforms.0.version
  - is_true: transforms.0.create_time

  - do:
      data_frame_transform_deprecated.start_transform:
        transform_id: "old-simple-continuous-transform"
  - match: { acknowledged: true }
  - do:
      data_frame_transform_deprecated.get_transform_stats:
        transform_id: "old-simple-continuous-transform"
  - match: { count: 1 }
  - match: { transforms.0.id: "old-simple-continuous-transform" }
  # Since we are breaking the stats format between 7.3 and 7.4 (allowed because we're beta) we cannot
  # assert on state in the mixed cluster as it could be state at the top level or state.task_state
  #- match: { transforms.0.state: "/started|indexing/" }

  - do:
      data_frame_transform_deprecated.stop_transform:
        transform_id: "old-simple-continuous-transform"
        wait_for_completion: true
  - match: { acknowledged: true }

  - do:
      data_frame_transform_deprecated.get_transform_stats:
        transform_id: "old-simple-continuous-transform"
  - match: { count: 1 }
  - match: { transforms.0.id: "old-simple-continuous-transform" }
  # Since we are breaking the stats format between 7.3 and 7.4 (allowed because we're beta) we cannot
  # assert on state in the mixed cluster as it could be state at the top level or state.task_state
  #- match: { transforms.0.state: "stopped" }
