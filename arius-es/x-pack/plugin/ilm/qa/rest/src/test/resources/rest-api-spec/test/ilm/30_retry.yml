---
setup:
  - do:
      cluster.health:
          wait_for_status: yellow

  - do:
      ilm.put_lifecycle:
        policy: "my_lifecycle"
        body: |
           {
             "policy": {
               "phases": {
                 "warm": {
                   "min_age": "1000s",
                   "actions": {
                     "forcemerge": {
                       "max_num_segments": 10000
                     }
                   }
                 },
                 "hot": {
                   "min_age": "1000s",
                   "actions": { }
                 }
               }
             }
           }

  - do:
      ilm.get_lifecycle:
        policy: "my_lifecycle"

---
teardown:

  - do:
      indices.delete:
        index: my_index

  - do:
      ilm.delete_lifecycle:
        policy: "my_lifecycle"

  - do:
      catch: missing
      ilm.get_lifecycle:
        policy: "my_lifecycle"

---
"Test Invalid Retry With Non-errored Policy":

  - do:
      indices.create:
        index: my_index
        body:
          settings:
            index.lifecycle.name: "my_lifecycle"

  - do:
      catch: bad_request
      ilm.retry:
        index: "my_index"
  - match: { error.root_cause.0.type: "illegal_argument_exception" }
  - match: { error.root_cause.0.reason: "cannot retry an action for an index [my_index] that has not encountered an error when running a Lifecycle Policy" }

  - do:
      ilm.explain_lifecycle:
        index: "my_index"
  - match: { indices.my_index.policy: "my_lifecycle" }
  - match: { indices.my_index.step: "complete" }
  - match: { indices.my_index.action: "complete" }
  - match: { indices.my_index.phase: "new" }


---
"Test Invalid Retry With No Policy":

  - do:
      indices.create:
        index: my_index

  - do:
      catch: bad_request
      ilm.retry:
        index: "my_index"
  - match: { error.root_cause.0.type: "illegal_argument_exception" }
  - match: { error.root_cause.0.reason: "cannot retry an action for an index [my_index] that has not encountered an error when running a Lifecycle Policy" }

---
"Test Invalid Re-run With Invalid Index":
  - do:
      indices.create:
        index: my_index

  - do:
      catch: bad_request
      ilm.retry:
        index: "does_not_exist"
  - match: { error.root_cause.0.type: "illegal_argument_exception" }
  - match: { error.root_cause.0.reason: "index [does_not_exist] does not exist" }
