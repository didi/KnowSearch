setup:
  - skip:
      features: headers
  - do:
      headers:
        Authorization: "Basic eF9wYWNrX3Jlc3RfdXNlcjp4LXBhY2stdGVzdC1wYXNzd29yZA==" # run as x_pack_rest_user, i.e. the test setup superuser
      index:
        id: trained_model_config-a-unused-regression-model1-0
        index: .ml-inference-000001
        body: >
          {
            "model_id": "a-unused-regression-model1",
            "created_by": "ml_tests",
            "version": "8.0.0",
            "description": "empty model for tests",
            "create_time": 0,
            "doc_type": "trained_model_config"
          }

  - do:
      headers:
        Authorization: "Basic eF9wYWNrX3Jlc3RfdXNlcjp4LXBhY2stdGVzdC1wYXNzd29yZA==" # run as x_pack_rest_user, i.e. the test setup superuser
      index:
        id: trained_model_config-a-unused-regression-model-0
        index: .ml-inference-000001
        body: >
          {
            "model_id": "a-unused-regression-model",
            "created_by": "ml_tests",
            "version": "8.0.0",
            "description": "empty model for tests",
            "create_time": 0,
            "doc_type": "trained_model_config"
          }
  - do:
      headers:
        Authorization: "Basic eF9wYWNrX3Jlc3RfdXNlcjp4LXBhY2stdGVzdC1wYXNzd29yZA==" # run as x_pack_rest_user, i.e. the test setup superuser
      index:
        id: trained_model_config-a-used-regression-model-0
        index: .ml-inference-000001
        body: >
          {
            "model_id": "a-used-regression-model",
            "created_by": "ml_tests",
            "version": "8.0.0",
            "description": "empty model for tests",
            "create_time": 0,
            "doc_type": "trained_model_config"
          }

  - do:
      headers:
        Authorization: "Basic eF9wYWNrX3Jlc3RfdXNlcjp4LXBhY2stdGVzdC1wYXNzd29yZA==" # run as x_pack_rest_user, i.e. the test setup superuser
      indices.refresh: {}

  - do:
      headers:
        Authorization: "Basic eF9wYWNrX3Jlc3RfdXNlcjp4LXBhY2stdGVzdC1wYXNzd29yZA==" # run as x_pack_rest_user, i.e. the test setup superuser
      ingest.put_pipeline:
        id: "regression-model-pipeline"
        body:  >
          {
            "processors": [
              {
                "inference" : {
                  "model_id" : "a-used-regression-model",
                  "inference_config": {"regression": {}},
                  "target_field": "regression_field",
                  "field_mappings": {}
                }
              }
            ]
          }
  - do:
      headers:
        Authorization: "Basic eF9wYWNrX3Jlc3RfdXNlcjp4LXBhY2stdGVzdC1wYXNzd29yZA==" # run as x_pack_rest_user, i.e. the test setup superuser
      ingest.put_pipeline:
        id: "regression-model-pipeline-1"
        body:  >
          {
            "processors": [
              {
                "inference" : {
                  "model_id" : "a-used-regression-model",
                  "inference_config": {"regression": {}},
                  "target_field": "regression_field",
                  "field_mappings": {}
                }
              }
            ]
          }
---
"Test get stats given missing trained model":

  - do:
      catch: missing
      ml.get_trained_models_stats:
        model_id: "missing-trained-model"
---
"Test get stats given expression without matches and allow_no_match is false":

  - do:
      catch: missing
      ml.get_trained_models_stats:
        model_id: "missing-trained-model*"
        allow_no_match: false

---
"Test get stats given expression without matches and allow_no_match is true":

  - do:
      ml.get_trained_models_stats:
        model_id: "missing-trained-model*"
        allow_no_match: true
  - match: { count: 0 }
  - match: { trained_model_stats: [] }
---
"Test get stats given trained models":

  - do:
      ml.get_trained_models_stats:
        model_id: "a-unused-regression-model"

  - match: { count: 1 }

  - do:
      ml.get_trained_models_stats:
        model_id: "_all"
  - match: { count: 4 }
  - match: { trained_model_stats.0.model_id: a-unused-regression-model }
  - match: { trained_model_stats.0.pipeline_count: 0 }
  - is_false: trained_model_stats.0.ingest
  - match: { trained_model_stats.1.model_id: a-unused-regression-model1 }
  - match: { trained_model_stats.1.pipeline_count: 0 }
  - is_false: trained_model_stats.1.ingest
  - match: { trained_model_stats.2.pipeline_count: 2 }
  - is_true: trained_model_stats.2.ingest

  - do:
      ml.get_trained_models_stats:
        model_id: "*"
  - match: { count: 4 }
  - match: { trained_model_stats.0.model_id: a-unused-regression-model }
  - match: { trained_model_stats.0.pipeline_count: 0 }
  - is_false: trained_model_stats.0.ingest
  - match: { trained_model_stats.1.model_id: a-unused-regression-model1 }
  - match: { trained_model_stats.1.pipeline_count: 0 }
  - is_false: trained_model_stats.1.ingest
  - match: { trained_model_stats.2.pipeline_count: 2 }
  - is_true: trained_model_stats.2.ingest

  - do:
      ml.get_trained_models_stats:
        model_id: "a-unused-regression-model*"
  - match: { count: 2 }
  - match: { trained_model_stats.0.model_id: a-unused-regression-model }
  - match: { trained_model_stats.0.pipeline_count: 0 }
  - is_false: trained_model_stats.0.ingest
  - match: { trained_model_stats.1.model_id: a-unused-regression-model1 }
  - match: { trained_model_stats.1.pipeline_count: 0 }
  - is_false: trained_model_stats.1.ingest

  - do:
      ml.get_trained_models_stats:
        model_id: "a-unused-regression-model*"
        size: 1
  - match: { count: 2 }
  - match: { trained_model_stats.0.model_id: a-unused-regression-model }
  - match: { trained_model_stats.0.pipeline_count: 0 }
  - is_false: trained_model_stats.0.ingest

  - do:
      ml.get_trained_models_stats:
        model_id: "a-unused-regression-model*"
        from: 1
        size: 1
  - match: { count: 2 }
  - match: { trained_model_stats.0.model_id: a-unused-regression-model1 }
  - match: { trained_model_stats.0.pipeline_count: 0 }
  - is_false: trained_model_stats.0.ingest

  - do:
      ml.get_trained_models_stats:
        model_id: "a-used-regression-model"

  - match: { count: 1 }
  - match: { trained_model_stats.0.model_id: a-used-regression-model }
  - match: { trained_model_stats.0.pipeline_count: 2 }
  - match:
      trained_model_stats.0.ingest.total:
        count: 0
        time_in_millis: 0
        current: 0
        failed: 0

  - match:
      trained_model_stats.0.ingest.pipelines.regression-model-pipeline:
        count: 0
        time_in_millis: 0
        current: 0
        failed: 0
        processors:
          - inference:
              type: inference
              stats:
                count: 0
                time_in_millis: 0
                current: 0
                failed: 0

  - match:
      trained_model_stats.0.ingest.pipelines.regression-model-pipeline-1:
        count: 0
        time_in_millis: 0
        current: 0
        failed: 0
        processors:
          - inference:
              type: inference
              stats:
                count: 0
                time_in_millis: 0
                current: 0
                failed: 0
