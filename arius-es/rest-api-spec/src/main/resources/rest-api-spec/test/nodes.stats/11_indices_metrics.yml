---
"Metric - blank":
  - skip:
      features: [arbitrary_key]
  - do:
      nodes.info: {}
  - set:
      nodes._arbitrary_key_: node_id

  - do:
      nodes.stats: {}

  - is_true:  nodes.$node_id.indices.docs
  - is_true:  nodes.$node_id.indices.store
  - is_true:  nodes.$node_id.indices.indexing
  - is_true:  nodes.$node_id.indices.get
  - is_true:  nodes.$node_id.indices.search
  - is_true:  nodes.$node_id.indices.merges
  - is_true:  nodes.$node_id.indices.refresh
  - is_true:  nodes.$node_id.indices.flush
  - is_true:  nodes.$node_id.indices.warmer
  - is_true:  nodes.$node_id.indices.query_cache
  - is_true:  nodes.$node_id.indices.fielddata
  - is_true:  nodes.$node_id.indices.completion
  - is_true:  nodes.$node_id.indices.segments
  - is_true:  nodes.$node_id.indices.translog
  - is_true:  nodes.$node_id.indices.recovery

---
"Metric - _all":
  - skip:
      features: [arbitrary_key]
  - do:
      nodes.info: {}
  - set:
      nodes._arbitrary_key_: node_id

  - do:
      nodes.stats: { metric: _all }

  - is_true:  nodes.$node_id.indices.docs
  - is_true:  nodes.$node_id.indices.store
  - is_true:  nodes.$node_id.indices.indexing
  - is_true:  nodes.$node_id.indices.get
  - is_true:  nodes.$node_id.indices.search
  - is_true:  nodes.$node_id.indices.merges
  - is_true:  nodes.$node_id.indices.refresh
  - is_true:  nodes.$node_id.indices.flush
  - is_true:  nodes.$node_id.indices.warmer
  - is_true:  nodes.$node_id.indices.query_cache
  - is_true:  nodes.$node_id.indices.fielddata
  - is_true:  nodes.$node_id.indices.completion
  - is_true:  nodes.$node_id.indices.segments
  - is_true:  nodes.$node_id.indices.translog
  - is_true:  nodes.$node_id.indices.recovery

---
"Metric - indices _all":
  - skip:
      features: [arbitrary_key]
  - do:
      nodes.info: {}
  - set:
      nodes._arbitrary_key_: node_id

  - do:
      nodes.stats: { metric: indices, index_metric: _all }

  - is_true:  nodes.$node_id.indices.docs
  - is_true:  nodes.$node_id.indices.store
  - is_true:  nodes.$node_id.indices.indexing
  - is_true:  nodes.$node_id.indices.get
  - is_true:  nodes.$node_id.indices.search
  - is_true:  nodes.$node_id.indices.merges
  - is_true:  nodes.$node_id.indices.refresh
  - is_true:  nodes.$node_id.indices.flush
  - is_true:  nodes.$node_id.indices.warmer
  - is_true:  nodes.$node_id.indices.query_cache
  - is_true:  nodes.$node_id.indices.fielddata
  - is_true:  nodes.$node_id.indices.completion
  - is_true:  nodes.$node_id.indices.segments
  - is_true:  nodes.$node_id.indices.translog
  - is_true:  nodes.$node_id.indices.recovery

---
"Metric - one":
  - skip:
      features: [arbitrary_key]
  - do:
      nodes.info: {}
  - set:
      nodes._arbitrary_key_: node_id

  - do:
      nodes.stats: { metric: indices, index_metric: docs }

  - is_true:   nodes.$node_id.indices.docs
  - is_false:  nodes.$node_id.indices.store
  - is_false:  nodes.$node_id.indices.indexing
  - is_false:  nodes.$node_id.indices.get
  - is_false:  nodes.$node_id.indices.search
  - is_false:  nodes.$node_id.indices.merges
  - is_false:  nodes.$node_id.indices.refresh
  - is_false:  nodes.$node_id.indices.flush
  - is_false:  nodes.$node_id.indices.warmer
  - is_false:  nodes.$node_id.indices.query_cache
  - is_false:  nodes.$node_id.indices.fielddata
  - is_false:  nodes.$node_id.indices.completion
  - is_false:  nodes.$node_id.indices.segments
  - is_false:  nodes.$node_id.indices.translog
  - is_false:  nodes.$node_id.indices.recovery

---
"Metric - multi":
  - skip:
      features: [arbitrary_key]
  - do:
      nodes.info: {}
  - set:
      nodes._arbitrary_key_: node_id

  - do:
      nodes.stats: { metric: indices, index_metric: [ store, get, merge ] }

  - is_false:  nodes.$node_id.indices.docs
  - is_true:   nodes.$node_id.indices.store
  - is_false:  nodes.$node_id.indices.indexing
  - is_true:   nodes.$node_id.indices.get
  - is_false:  nodes.$node_id.indices.search
  - is_true:   nodes.$node_id.indices.merges
  - is_false:  nodes.$node_id.indices.refresh
  - is_false:  nodes.$node_id.indices.flush
  - is_false:  nodes.$node_id.indices.warmer
  - is_false:  nodes.$node_id.indices.query_cache
  - is_false:  nodes.$node_id.indices.fielddata
  - is_false:  nodes.$node_id.indices.completion
  - is_false:  nodes.$node_id.indices.segments
  - is_false:  nodes.$node_id.indices.translog
  - is_false:  nodes.$node_id.indices.recovery


---
"Metric - recovery":
  - skip:
      features: [arbitrary_key]
  - do:
      nodes.info: {}
  - set:
      nodes._arbitrary_key_: node_id

  - do:
      nodes.stats: { metric: indices, index_metric: [ recovery ] }

  - is_false:  nodes.$node_id.indices.docs
  - is_false:  nodes.$node_id.indices.store
  - is_false:  nodes.$node_id.indices.indexing
  - is_false:  nodes.$node_id.indices.get
  - is_false:  nodes.$node_id.indices.search
  - is_false:  nodes.$node_id.indices.merges
  - is_false:  nodes.$node_id.indices.refresh
  - is_false:  nodes.$node_id.indices.flush
  - is_false:  nodes.$node_id.indices.warmer
  - is_false:  nodes.$node_id.indices.query_cache
  - is_false:  nodes.$node_id.indices.fielddata
  - is_false:  nodes.$node_id.indices.completion
  - is_false:  nodes.$node_id.indices.segments
  - is_false:  nodes.$node_id.indices.translog
  - is_true:   nodes.$node_id.indices.recovery

---
"Metric - _all include_segment_file_sizes":
  - skip:
      features: [arbitrary_key]
  - do:
      nodes.info: {}
  - set:
      nodes._arbitrary_key_: node_id

  - do:
      nodes.stats: { metric: indices, index_metric: _all, include_segment_file_sizes: true }

  - is_true:   nodes.$node_id.indices.docs
  - is_true:   nodes.$node_id.indices.store
  - is_true:   nodes.$node_id.indices.indexing
  - is_true:   nodes.$node_id.indices.get
  - is_true:   nodes.$node_id.indices.search
  - is_true:   nodes.$node_id.indices.merges
  - is_true:   nodes.$node_id.indices.refresh
  - is_true:   nodes.$node_id.indices.flush
  - is_true:   nodes.$node_id.indices.warmer
  - is_true:   nodes.$node_id.indices.query_cache
  - is_true:   nodes.$node_id.indices.fielddata
  - is_true:   nodes.$node_id.indices.completion
  - is_true:   nodes.$node_id.indices.segments
  - is_true:   nodes.$node_id.indices.translog
  - is_true:   nodes.$node_id.indices.recovery
  - is_true:   nodes.$node_id.indices.segments.file_sizes

---
"Metric - segments include_segment_file_sizes":
  - skip:
      features: [arbitrary_key]
  - do:
      nodes.info: {}
  - set:
      nodes._arbitrary_key_: node_id

  - do:
      nodes.stats: { metric: indices, index_metric: segments, include_segment_file_sizes: true }

  - is_false:  nodes.$node_id.indices.docs
  - is_false:  nodes.$node_id.indices.store
  - is_false:  nodes.$node_id.indices.indexing
  - is_false:  nodes.$node_id.indices.get
  - is_false:  nodes.$node_id.indices.search
  - is_false:  nodes.$node_id.indices.merges
  - is_false:  nodes.$node_id.indices.refresh
  - is_false:  nodes.$node_id.indices.flush
  - is_false:  nodes.$node_id.indices.warmer
  - is_false:  nodes.$node_id.indices.query_cache
  - is_false:  nodes.$node_id.indices.fielddata
  - is_false:  nodes.$node_id.indices.completion
  - is_true:   nodes.$node_id.indices.segments
  - is_false:  nodes.$node_id.indices.translog
  - is_false:  nodes.$node_id.indices.recovery
  - is_true:   nodes.$node_id.indices.segments.file_sizes

