[[zip-windows]]
=== Install Elasticsearch with `.zip` on Windows

Elasticsearch can be installed on Windows using the Windows `.zip` archive.  This
comes with a `elasticsearch-service.bat` command which will setup Elasticsearch to run as a
service.

TIP: Elasticsearch has historically been installed on Windows using the `.zip` archive.
An <<windows, MSI installer package>> is available that provides the easiest getting started
experience for Windows. You can continue using the `.zip` approach if you prefer.

include::license.asciidoc[]

NOTE: On Windows the Elasticsearch {ml} feature requires the Microsoft Universal
C Runtime library. This is built into Windows 10, Windows Server 2016 and more
recent versions of Windows. For older versions of Windows it can be installed
via Windows Update, or from a
https://support.microsoft.com/en-us/help/2999226/update-for-universal-c-runtime-in-windows[separate download].
If you cannot install the Microsoft Universal C Runtime library you can still
use the rest of Elasticsearch if you disable the {ml} feature.

The latest stable version of Elasticsearch can be found on the
link:/downloads/elasticsearch[Download Elasticsearch] page.
Other versions can be found on the
link:/downloads/past-releases[Past Releases page].

NOTE: Elasticsearch includes a bundled version of http://openjdk.java.net[OpenJDK]
from the JDK maintainers (GPLv2+CE). To use your own version of Java,
see the <<jvm-version, JVM version requirements>>

[[install-windows]]
==== Download and install the `.zip` package

ifeval::["{release-state}"=="unreleased"]

Version {version} of Elasticsearch has not yet been released.

endif::[]

ifeval::["{release-state}"!="unreleased"]

Download the `.zip` archive for Elasticsearch v{version} from: https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-{version}-windows-x86_64.zip

Alternatively, you can download the following package, which contains only 
features that are available under the Apache 2.0 license: 
https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-oss-{version}-windows-x86_64.zip

Unzip it with your favourite unzip tool.  This will create a folder called
+elasticsearch-{version}+, which we will refer to as `%ES_HOME%`. In a terminal
window, `cd` to the `%ES_HOME%` directory, for instance:

["source","sh",subs="attributes"]
----------------------------
cd c:\elasticsearch-{version}
----------------------------

endif::[]

ifdef::include-xpack[]
[role="xpack"]
[[windows-enable-indices]]
==== Enable automatic creation of system indices

include::xpack-indices.asciidoc[]

endif::include-xpack[]

[[windows-running]]
include::zip-windows-start.asciidoc[]

[[windows-configuring]]
==== Configuring Elasticsearch on the command line

Elasticsearch loads its configuration from the `%ES_HOME%\config\elasticsearch.yml`
file by default.  The format of this config file is explained in
<<settings>>.

Any settings that can be specified in the config file can also be specified on
the command line, using the `-E` syntax as follows:

[source,sh]
--------------------------------------------
.\bin\elasticsearch.bat -Ecluster.name=my_cluster -Enode.name=node_1
--------------------------------------------

NOTE: Values that contain spaces must be surrounded with quotes.  For instance `-Epath.logs="C:\My Logs\logs"`.

TIP: Typically, any cluster-wide settings (like `cluster.name`) should be
added to the `elasticsearch.yml` config file, while any node-specific settings
such as `node.name` could be specified on the command line.

include::check-running.asciidoc[]

[[windows-service]]
==== Installing Elasticsearch as a Service on Windows

Elasticsearch can be installed as a service to run in the background or start
automatically at boot time without any user interaction. This can be achieved
through the `elasticsearch-service.bat` script in the `bin\` folder which allows one to
install, remove, manage or configure the service and potentially start and
stop the service, all from the command-line.

["source","sh",subs="attributes,callouts"]
--------------------------------------------------
c:\elasticsearch-{version}{backslash}bin>elasticsearch-service.bat

Usage: elasticsearch-service.bat install|remove|start|stop|manager [SERVICE_ID]
--------------------------------------------------

The script requires one parameter (the command to execute) followed by an
optional one indicating the service id (useful when installing multiple
Elasticsearch services).

The commands available are:

[horizontal]
`install`:: Install Elasticsearch as a service

`remove`:: Remove the installed Elasticsearch service (and stop the service if started)

`start`:: Start the Elasticsearch service (if installed)

`stop`:: Stop the Elasticsearch service (if started)

`manager`:: Start a GUI for managing the installed service

The name of the service and the value of `JAVA_HOME` will be made available during install:

["source","sh",subs="attributes"]
--------------------------------------------------
c:\elasticsearch-{version}{backslash}bin>elasticsearch-service.bat install
Installing service      :  "elasticsearch-service-x64"
Using JAVA_HOME (64-bit):  "c:\jvm\jdk1.8"
The service 'elasticsearch-service-x64' has been installed.
--------------------------------------------------

NOTE: While a JRE can be used for the Elasticsearch service, due to its use of a client VM (as opposed to a server JVM which offers better performance for long-running applications) its usage is discouraged and a warning will be issued.

NOTE: The system environment variable `JAVA_HOME` should be set to the path to
the JDK installation that you want the service to use. If you upgrade the JDK,
you are not required to the reinstall the service but you must set the value of
the system environment variable `JAVA_HOME` to the path to the new JDK
installation. However, upgrading across JVM types (e.g. JRE versus SE) is not
supported, and does require the service to be reinstalled.

[[windows-service-settings]]
[float]
=== Customizing service settings

The Elasticsearch service can be configured prior to installation by setting the following environment variables (either using the https://technet.microsoft.com/en-us/library/cc754250(v=ws.10).aspx[set command] from the command line, or through the `System Properties->Environment Variables` GUI).

[horizontal]
`SERVICE_ID`::

  A unique identifier for the service. Useful if installing multiple instances
  on the same machine. Defaults to `elasticsearch-service-x64`.

`SERVICE_USERNAME`::

  The user to run as, defaults to the local system account.

`SERVICE_PASSWORD`::

  The password for the user specified in `%SERVICE_USERNAME%`.

`SERVICE_DISPLAY_NAME`::

  The name of the service.  Defaults to `Elasticsearch <version> %SERVICE_ID%`.

`SERVICE_DESCRIPTION`::

  The description of the service.  Defaults to `Elasticsearch <version> Windows Service - https://elastic.co`.

`JAVA_HOME`::

  The installation directory of the desired JVM to run the service under.

`SERVICE_LOG_DIR`::

    Service log directory, defaults to `%ES_HOME%\logs`. Note that this does
    not control the path for the Elasticsearch logs; the path for these is set
    via the setting `path.logs` in the `elasticsearch.yml` configuration file,
    or on the command line.

`ES_PATH_CONF`::

    Configuration file directory (which needs to include `elasticsearch.yml`,
    `jvm.options`, and `log4j2.properties` files), defaults to
    `%ES_HOME%\config`.

`ES_JAVA_OPTS`::

    Any additional JVM system properties you may want to apply.

`ES_START_TYPE`::

    Startup mode for the service.  Can be either `auto` or `manual` (default).

`ES_STOP_TIMEOUT` ::

  The timeout in seconds that procrun waits for service to exit gracefully.  Defaults to `0`.

NOTE: At its core, `elasticsearch-service.bat` relies on http://commons.apache.org/proper/commons-daemon/[Apache Commons Daemon] project
to install the service. Environment variables set prior to the service installation are copied and will be used during the service lifecycle. This means any changes made to them after the installation will not be picked up unless the service is reinstalled.

NOTE: On Windows, the <<heap-size,heap size>> can be configured as for
any other Elasticsearch installation when running Elasticsearch from the
command line, or when installing Elasticsearch as a service for the
first time. To adjust the heap size for an already installed service,
use the service manager: `bin\elasticsearch-service.bat manager`.

NOTE: The service automatically configures a private temporary directory for use
by Elasticsearch when it is running. This private temporary directory is
configured as a sub-directory of the private temporary directory for the user
running the installation. If the service will run under a different user, you
can configure the location of the temporary directory that the service should
use by setting the environment variable `ES_TMPDIR` to the preferred location
before you execute the service installation.

Using the Manager GUI::

It is also possible to configure the service after it's been installed using the manager GUI (`elasticsearch-service-mgr.exe`), which offers insight into the installed service, including its status, startup type, JVM, start and stop settings amongst other things.  Simply invoking `elasticsearch-service.bat manager` from the command-line will open up the manager window:

image::images/service-manager-win.png["Windows Service Manager GUI",align="center"]

Most changes (like JVM settings) made through the manager GUI will require a restart of the service in order to take affect.

[[windows-layout]]
==== Directory layout of `.zip` archive

The `.zip` package is entirely self-contained. All files and directories are,
by default, contained within `%ES_HOME%` -- the directory created when
unpacking the archive.

This is very convenient because you don't have to create any directories to
start using Elasticsearch, and uninstalling Elasticsearch is as easy as
removing the `%ES_HOME%` directory.  However, it is advisable to change the
default locations of the config directory, the data directory, and the logs
directory so that you do not delete important data later on.


[cols="<h,<,<m,<m",options="header",]
|=======================================================================
| Type | Description | Default Location | Setting
| home
  | Elasticsearch home directory or `%ES_HOME%`
 d| Directory created by unpacking the archive
  |

| bin
  | Binary scripts including `elasticsearch` to start a node
    and `elasticsearch-plugin` to install plugins
  | %ES_HOME%\bin
 d|

| conf
  | Configuration files including `elasticsearch.yml`
  | %ES_HOME%\config
  | <<config-files-location,ES_PATH_CONF>>

| data
  | The location of the data files of each index / shard allocated
    on the node. Can hold multiple locations.
  | %ES_HOME%\data
  | path.data

| logs
  | Log files location.
  | %ES_HOME%\logs
  | path.logs

| plugins
  | Plugin files location. Each plugin will be contained in a subdirectory.
  | %ES_HOME%\plugins
  |

| repo
  | Shared file system repository locations. Can hold multiple locations. A file system repository can be placed in to any subdirectory of any directory specified here.
 d| Not configured
  | path.repo

|=======================================================================

include::next-steps.asciidoc[]
