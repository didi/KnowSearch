[[boolean]]
=== Boolean datatype
++++
<titleabbrev>Boolean</titleabbrev>
++++

Boolean fields accept JSON `true` and `false` values, but can also accept
strings which are interpreted as either true or false:

[horizontal]
False values::

    `false`, `"false"`

True values::

    `true`, `"true"`

For example:

[source,console]
--------------------------------------------------
PUT my_index
{
  "mappings": {
    "properties": {
      "is_published": {
        "type": "boolean"
      }
    }
  }
}

POST my_index/_doc/1
{
  "is_published": "true" <1>
}

GET my_index/_search
{
  "query": {
    "term": {
      "is_published": true <2>
    }
  }
}
--------------------------------------------------

<1> Indexing a document with `"true"`, which is interpreted as `true`.
<2> Searching for documents with a JSON `true`.

Aggregations like the <<search-aggregations-bucket-terms-aggregation,`terms`
aggregation>>  use `1` and `0` for the `key`, and the strings `"true"` and
`"false"` for the `key_as_string`. Boolean fields  when used in scripts,
return `1` and `0`:

[source,console]
--------------------------------------------------
POST my_index/_doc/1
{
  "is_published": true
}

POST my_index/_doc/2
{
  "is_published": false
}

GET my_index/_search
{
  "aggs": {
    "publish_state": {
      "terms": {
        "field": "is_published"
      }
    }
  },
  "script_fields": {
    "is_published": {
      "script": {
        "lang": "painless",
        "source": "doc['is_published'].value"
      }
    }
  }
}
--------------------------------------------------

[[boolean-params]]
==== Parameters for `boolean` fields

The following parameters are accepted by `boolean` fields:

[horizontal]

<<mapping-boost,`boost`>>::

    Mapping field-level query time boosting. Accepts a floating point number, defaults
    to `1.0`.

<<doc-values,`doc_values`>>::

    Should the field be stored on disk in a column-stride fashion, so that it
    can later be used for sorting, aggregations, or scripting? Accepts `true`
    (default) or `false`.

<<mapping-index,`index`>>::

    Should the field be searchable? Accepts `true` (default) and `false`.

<<null-value,`null_value`>>::

    Accepts any of the true or false values listed above. The value is
    substituted for any explicit `null` values.  Defaults to `null`, which
    means the field is treated as missing.

<<mapping-store,`store`>>::

    Whether the field value should be stored and retrievable separately from
    the <<mapping-source-field,`_source`>> field. Accepts `true` or `false`
    (default).

<<mapping-field-meta,`meta`>>::

    Metadata about the field.
